import javax.inject.Inject
import org.gradle.api.DefaultTask
import org.gradle.api.tasks.TaskAction
import org.gradle.process.ExecOperations

/**
 * Custom class that clones or updates a given Git repository.
 */
abstract class PreplaceTask extends DefaultTask {
  private ExecOperations execOperations

  @Inject
  PreplaceTask(ExecOperations execOperations) {
    this.execOperations = execOperations
  }

  @TaskAction
  void doTaskAction() {
    //check if perl is available
    boolean isPerlInstalled = true
    try {
      execOperations.exec {
        commandLine 'perl', '-version'
      }
    }  catch (Exception ex) {
      isPerlInstalled = false
    }
    if (isPerlInstalled) {
      def preplace = project.file("${project.layout.buildDirectory.get()}/utils/plume-scripts/preplace")
      // Work around Javadoc bug
      execOperations. exec {
        commandLine 'perl', preplace, "<dt><span class=\"memberNameLink\"><a href=\".*\\(\\)</a></span> - Constructor for enum [a-zA-Z0-9_.]*<a href=\".*</a></dt>", '', 'build/docs/api/index-all.html'
      }
      // Permit validateAPI to pass
      execOperations.exec {
        commandLine 'perl', preplace, '^(<meta http-equiv=\"Refresh\" content=\"0;)([^ ])', '\\1 url=\\2', 'build/docs/api/'
      }
      // Reduce size of diffs (when it's copied over to gh-pages branch whech is under
      // version control).  Note that build/docs/api/ is the same as src/docs/api/.
      execOperations.  exec {
        commandLine 'perl', preplace, '^<!-- Generated by javadoc \\(.* -->\$', '', 'build/docs/api/'
      }
      execOperations.  exec {
        commandLine 'perl', preplace, "^<meta name=\"date\" content=\"[-0-9]+\">\$", '', 'build/docs/api/'
      }
    }
  }
}
