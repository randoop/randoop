[
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getUI",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the factory"
        },
        "description": "return the factory",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getDocument",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the model"
        },
        "description": "return the model",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getMargin",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the margin"
        },
        "description": "return the margin",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getNavigationFilter",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the NavigationFilter"
        },
        "description": "return the NavigationFilter",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getCaret",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the caret"
        },
        "description": "return the caret",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getHighlighter",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the highlighter"
        },
        "description": "return the highlighter",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "setDragEnabled",
      "parameterTypes": [
        "boolean"
      ]
    },
    "identifiers": {
      "parameters": [
        "b"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.awt.HeadlessException",
        "description": "throws HeadlessException if b is true and GraphicsEnvironment.isHeadless() returns true",
        "guard": {
          "condition": "b==true && b==true",
          "description": "if b is true and GraphicsEnvironment.isHeadless() returns true"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getDragEnabled",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the value of the dragEnabled property"
        },
        "description": "return the value of the dragEnabled property",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getDropMode",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the drop mode for this component"
        },
        "description": "return the drop mode for this component",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "dropLocationForPoint",
      "parameterTypes": [
        "java.awt.Point"
      ]
    },
    "identifiers": {
      "parameters": [
        "p"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(p)",
          "description": "the drop location, or null"
        },
        "description": "return the drop location, or null",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getDropLocation",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the drop location"
        },
        "description": "return the drop location",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getKeymap",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the keymap"
        },
        "description": "return the keymap",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "addKeymap",
      "parameterTypes": [
        "java.lang.String",
        "javax.swing.text.Keymap"
      ]
    },
    "identifiers": {
      "parameters": [
        "nm",
        "parent"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(parent)",
          "description": "the keymap"
        },
        "description": "return the keymap",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getKeymap",
      "parameterTypes": [
        "java.lang.String"
      ]
    },
    "identifiers": {
      "parameters": [
        "nm"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getKeymap())",
          "description": "the keymap"
        },
        "description": "return the keymap",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getCaretColor",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the color"
        },
        "description": "return the color",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getSelectionColor",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the color"
        },
        "description": "return the color",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getSelectedTextColor",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the color"
        },
        "description": "return the color",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getDisabledTextColor",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the color"
        },
        "description": "return the color",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getText",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "offs",
        "len"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getText())",
          "description": "the text"
        },
        "description": "return the text",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": [
      {
        "description": "the offset ≥ 0",
        "guard": {
          "condition": "offs>=0",
          "description": "the offset ≥ 0"
        }
      },
      {
        "description": "the length ≥ 0",
        "guard": {
          "condition": "len>=0",
          "description": "the length ≥ 0"
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "modelToView",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "pos"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "the position ≥ 0",
        "guard": {
          "condition": "pos>=0",
          "description": "the position ≥ 0"
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "moveCaretPosition",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "pos"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if the value supplied for position is less than zero or greater than the component's text length",
        "guard": {
          "condition": "target.getX()<0",
          "description": "if the value supplied for position is less than zero or greater than the component's text length"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getFocusAccelerator",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the key"
        },
        "description": "return the key",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "setCaretPosition",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "position"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if the value supplied for position is less than zero or greater than the component's text length",
        "guard": {
          "condition": "target.getX()<0",
          "description": "if the value supplied for position is less than zero or greater than the component's text length"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getCaretPosition",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result>=0",
          "description": "the position of the text insertion caret for the text component ≥ 0"
        },
        "description": "return the position of the text insertion caret for the text component ≥ 0",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getText",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the document is null",
        "guard": {
          "condition": "target.getDocument()==null",
          "description": "if the document is null"
        }
      }
    ],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the text"
        },
        "description": "return the text",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getSelectedText",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getText())",
          "description": "the text"
        },
        "description": "return the text",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "isEditable",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "the boolean value"
        },
        "description": "return the boolean value",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getSelectionStart",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result>=0",
          "description": "the start position ≥ 0"
        },
        "description": "return the start position ≥ 0",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "setSelectionStart",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "selectionStart"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "the start position of the text ≥ 0",
        "guard": {
          "condition": "selectionStart>=0",
          "description": "the start position of the text ≥ 0"
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getSelectionEnd",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result>=0",
          "description": "the end position ≥ 0"
        },
        "description": "return the end position ≥ 0",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "setSelectionEnd",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "selectionEnd"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "the end position of the text ≥ 0",
        "guard": {
          "condition": "selectionEnd>=0",
          "description": "the end position of the text ≥ 0"
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "getPrintable",
      "parameterTypes": [
        "java.text.MessageFormat",
        "java.text.MessageFormat"
      ]
    },
    "identifiers": {
      "parameters": [
        "headerFormat",
        "footerFormat"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "a Printable for use in printing content of this JTextComponent"
        },
        "description": "return a Printable for use in printing content of this JTextComponent",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "javax.swing.text.JTextComponent",
      "name": "paramString",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(target.getX())",
          "description": "a string representation of this JTextComponent"
        },
        "description": "return a string representation of this JTextComponent",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  }
]