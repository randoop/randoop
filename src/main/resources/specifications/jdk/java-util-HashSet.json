[
  {
    "operation": {
      "classname": "java.util.HashSet",
      "name": "java.util.HashSet",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "c"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the specified collection is null",
        "guard": {
          "condition": "c==null",
          "description": "if the specified collection is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.HashSet",
      "name": "java.util.HashSet",
      "parameterTypes": [
        "int",
        "float"
      ]
    },
    "identifiers": {
      "parameters": [
        "initialCapacity",
        "loadFactor"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if the initial capacity is less than zero, or if the load factor is nonpositive",
        "guard": {
          "condition": "initialCapacity<0 || loadFactor<=0",
          "description": "if the initial capacity is less than zero, or if the load factor is nonpositive"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.HashSet",
      "name": "java.util.HashSet",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "initialCapacity"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if the initial capacity is less than zero",
        "guard": {
          "condition": "initialCapacity<0",
          "description": "if the initial capacity is less than zero"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.HashSet",
      "name": "java.util.HashSet",
      "parameterTypes": [
        "int",
        "float",
        "boolean"
      ]
    },
    "identifiers": {
      "parameters": [
        "initialCapacity",
        "loadFactor",
        "dummy"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if the initial capacity is less than zero, or if the load factor is nonpositive",
        "guard": {
          "condition": "initialCapacity<0 || loadFactor<=0",
          "description": "if the initial capacity is less than zero, or if the load factor is nonpositive"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.HashSet",
      "name": "isEmpty",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result==true",
          "description": "true if this set contains no elements"
        },
        "description": "return true if this set contains no elements",
        "guard": {
          "condition": "target.contains(java.lang.Object)",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.HashSet",
      "name": "add",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "e"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result==true",
          "description": "true if this set did not already contain the specified element"
        },
        "description": "return true if this set did not already contain the specified element",
        "guard": {
          "condition": "(target.contains(java.lang.Object))==false",
          "description": ""
        }
      }
    ],
    "pre": []
  }
]