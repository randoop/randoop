[
  {
    "operation": {
      "classname": "java.awt.JobAttributes",
      "name": "java.awt.JobAttributes",
      "parameterTypes": [
        "int",
        "java.awt.JobAttributes$DefaultSelectionType",
        "java.awt.JobAttributes$DestinationType",
        "java.awt.JobAttributes$DialogType",
        "java.lang.String",
        "int",
        "int",
        "java.awt.JobAttributes$MultipleDocumentHandlingType",
        "[[I",
        "java.lang.String",
        "java.awt.JobAttributes$SidesType"
      ]
    },
    "identifiers": {
      "parameters": [
        "copies",
        "defaultSelection",
        "destination",
        "dialog",
        "fileName",
        "maxPage",
        "minPage",
        "multipleDocumentHandling",
        "pageRanges",
        "printer",
        "sides"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "an integer greater than 0",
        "guard": {
          "condition": "copies>0",
          "description": "an integer greater than 0"
        }
      },
      {
        "description": "an integer greater than zero and greater than or equal to minPage",
        "guard": {
          "condition": "copies>0",
          "description": "an integer greater than zero and greater than or equal to minPage"
        }
      },
      {
        "description": "an integer greater than zero and less than or equal to maxPage",
        "guard": {
          "condition": "copies>0",
          "description": "an integer greater than zero and less than or equal to maxPage"
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "java.awt.JobAttributes",
      "name": "setCopies",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "copies"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if copies is less than or equal to 0",
        "guard": {
          "condition": "copies<=0",
          "description": "if copies is less than or equal to 0"
        }
      }
    ],
    "post": [],
    "pre": [
      {
        "description": "an integer greater than 0",
        "guard": {
          "condition": "copies>0",
          "description": "an integer greater than 0"
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "java.awt.JobAttributes",
      "name": "setDefaultSelection",
      "parameterTypes": [
        "java.awt.JobAttributes$DefaultSelectionType"
      ]
    },
    "identifiers": {
      "parameters": [
        "defaultSelection"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if defaultSelection is null",
        "guard": {
          "condition": "defaultSelection==null",
          "description": "if defaultSelection is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.awt.JobAttributes",
      "name": "setDestination",
      "parameterTypes": [
        "java.awt.JobAttributes$DestinationType"
      ]
    },
    "identifiers": {
      "parameters": [
        "destination"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if destination is null.",
        "guard": {
          "condition": "destination==null",
          "description": "if destination is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.awt.JobAttributes",
      "name": "setDialog",
      "parameterTypes": [
        "java.awt.JobAttributes$DialogType"
      ]
    },
    "identifiers": {
      "parameters": [
        "dialog"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if dialog is null.",
        "guard": {
          "condition": "dialog==null",
          "description": "if dialog is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.awt.JobAttributes",
      "name": "getMaxPage",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result>0",
          "description": "an integer greater than zero and greater than or equal to minPage."
        },
        "description": "return an integer greater than zero and greater than or equal to minPage.",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.awt.JobAttributes",
      "name": "getMinPage",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result>0",
          "description": "an integer greater than zero and less than or equal to maxPage."
        },
        "description": "return an integer greater than zero and less than or equal to maxPage.",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.awt.JobAttributes",
      "name": "setMultipleDocumentHandling",
      "parameterTypes": [
        "java.awt.JobAttributes$MultipleDocumentHandlingType"
      ]
    },
    "identifiers": {
      "parameters": [
        "multipleDocumentHandling"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if multipleDocumentHandling is null.",
        "guard": {
          "condition": "multipleDocumentHandling==null",
          "description": "if multipleDocumentHandling is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.awt.JobAttributes",
      "name": "getPageRanges",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "(result<{minPage})==false",
          "description": "an array of integer arrays of 2 elements. An array is interpreted as a range spanning all pages including and between the specified pages. Ranges must be in ascending order and must not overlap. Specified page numbers cannot be less than minPage nor greater than maxPage. For example: (new int[][] { new int[] { 1, 3 }, new int[] { 5, 5 }, new int[] { 15, 19 } }), specifies pages 1, 2, 3, 5, 15, 16, 17, 18, and 19."
        },
        "description": "return an array of integer arrays of 2 elements. An array is interpreted as a range spanning all pages including and between the specified pages. Ranges must be in ascending order and must not overlap. Specified page numbers cannot be less than minPage nor greater than maxPage. For example: (new int[][] { new int[] { 1, 3 }, new int[] { 5, 5 }, new int[] { 15, 19 } }), specifies pages 1, 2, 3, 5, 15, 16, 17, 18, and 19.",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.awt.JobAttributes",
      "name": "setSides",
      "parameterTypes": [
        "java.awt.JobAttributes$SidesType"
      ]
    },
    "identifiers": {
      "parameters": [
        "sides"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if sides is null.",
        "guard": {
          "condition": "sides==null",
          "description": "if sides is null."
        }
      }
    ],
    "post": [],
    "pre": []
  }
]