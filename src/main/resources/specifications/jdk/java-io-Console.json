[
  {
    "operation": {
      "classname": "java.io.Console",
      "name": "format",
      "parameterTypes": [
        "java.lang.String",
        "[Ljava.lang.Object;"
      ]
    },
    "identifiers": {
      "parameters": [
        "fmt",
        "args"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.util.IllegalFormatException",
        "description": "throws IllegalFormatException If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification.",
        "guard": {
          "condition": "fmt.contains(java.lang.CharSequence)",
          "description": "If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.io.Console",
      "name": "printf",
      "parameterTypes": [
        "java.lang.String",
        "[Ljava.lang.Object;"
      ]
    },
    "identifiers": {
      "parameters": [
        "format",
        "args"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.util.IllegalFormatException",
        "description": "throws IllegalFormatException If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification.",
        "guard": {
          "condition": "format.contains(java.lang.CharSequence)",
          "description": "If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.io.Console",
      "name": "readLine",
      "parameterTypes": [
        "java.lang.String",
        "[Ljava.lang.Object;"
      ]
    },
    "identifiers": {
      "parameters": [
        "fmt",
        "args"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.util.IllegalFormatException",
        "description": "throws IllegalFormatException If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification.",
        "guard": {
          "condition": "fmt.contains(java.lang.CharSequence)",
          "description": "If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.io.Console",
      "name": "readPassword",
      "parameterTypes": [
        "java.lang.String",
        "[Ljava.lang.Object;"
      ]
    },
    "identifiers": {
      "parameters": [
        "fmt",
        "args"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.util.IllegalFormatException",
        "description": "throws IllegalFormatException If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification.",
        "guard": {
          "condition": "fmt.contains(java.lang.CharSequence)",
          "description": "If a format string contains an illegal syntax, a format specifier that is incompatible with the given arguments, insufficient arguments given the format string, or other illegal conditions. For specification of all possible formatting errors, see the Details section of the formatter class specification."
        }
      }
    ],
    "post": [],
    "pre": []
  }
]