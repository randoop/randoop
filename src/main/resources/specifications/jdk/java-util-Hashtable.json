[
  {
    "operation": {
      "classname": "java.util.Hashtable",
      "name": "java.util.Hashtable",
      "parameterTypes": [
        "int",
        "float"
      ]
    },
    "identifiers": {
      "parameters": [
        "initialCapacity",
        "loadFactor"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if the initial capacity is less than zero, or if the load factor is nonpositive.",
        "guard": {
          "condition": "initialCapacity<0 || loadFactor<=0",
          "description": "if the initial capacity is less than zero, or if the load factor is nonpositive."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Hashtable",
      "name": "java.util.Hashtable",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "initialCapacity"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if the initial capacity is less than zero.",
        "guard": {
          "condition": "initialCapacity<0",
          "description": "if the initial capacity is less than zero."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Hashtable",
      "name": "java.util.Hashtable",
      "parameterTypes": [
        "java.util.Map"
      ]
    },
    "identifiers": {
      "parameters": [
        "t"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the specified map is null.",
        "guard": {
          "condition": "t==null",
          "description": "if the specified map is null."
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Hashtable",
      "name": "contains",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "value"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the value is null",
        "guard": {
          "condition": "value==null",
          "description": "if the value is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Hashtable",
      "name": "containsValue",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "value"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the value is null",
        "guard": {
          "condition": "value==null",
          "description": "if the value is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Hashtable",
      "name": "containsKey",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "key"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the key is null",
        "guard": {
          "condition": "key==null",
          "description": "if the key is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Hashtable",
      "name": "get",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "key"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the specified key is null",
        "guard": {
          "condition": "key==null",
          "description": "if the specified key is null"
        }
      }
    ],
    "post": [
      {
        "property": {
          "condition": "result==null",
          "description": "the value to which the specified key is mapped, or null if this map contains no mapping for the key"
        },
        "description": "return the value to which the specified key is mapped, or null if this map contains no mapping for the key",
        "guard": {
          "condition": "target.contains(key)",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Hashtable",
      "name": "put",
      "parameterTypes": [
        "java.lang.Object",
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "key",
        "value"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the key or value is null",
        "guard": {
          "condition": "key==null || value==null",
          "description": "if the key or value is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Hashtable",
      "name": "remove",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "key"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the key is null",
        "guard": {
          "condition": "key==null",
          "description": "if the key is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Hashtable",
      "name": "putAll",
      "parameterTypes": [
        "java.util.Map"
      ]
    },
    "identifiers": {
      "parameters": [
        "t"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the specified map is null",
        "guard": {
          "condition": "t==null",
          "description": "if the specified map is null"
        }
      }
    ],
    "post": [],
    "pre": []
  }
]