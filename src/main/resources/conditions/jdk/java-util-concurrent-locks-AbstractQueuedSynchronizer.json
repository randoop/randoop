[
  {
    "operation": {
      "classname": "java.util.concurrent.locks.AbstractQueuedSynchronizer",
      "name": "tryAcquire",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "arg"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "the acquire argument. This value is always the one passed to an acquire method, or is the value saved on entry to a condition wait. The value is otherwise uninterpreted and can represent anything you like.",
        "guard": {
          "condition": "target==1",
          "description": "the acquire argument. This value is always the one passed to an acquire method, or is the value saved on entry to a condition wait. The value is otherwise uninterpreted and can represent anything you like."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "java.util.concurrent.locks.AbstractQueuedSynchronizer",
      "name": "tryRelease",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "arg"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "the release argument. This value is always the one passed to a release method, or the current state value upon entry to a condition wait. The value is otherwise uninterpreted and can represent anything you like.",
        "guard": {
          "condition": "target==1",
          "description": "the release argument. This value is always the one passed to a release method, or the current state value upon entry to a condition wait. The value is otherwise uninterpreted and can represent anything you like."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "java.util.concurrent.locks.AbstractQueuedSynchronizer",
      "name": "tryAcquireShared",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "arg"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "the acquire argument. This value is always the one passed to an acquire method, or is the value saved on entry to a condition wait. The value is otherwise uninterpreted and can represent anything you like.",
        "guard": {
          "condition": "target==1",
          "description": "the acquire argument. This value is always the one passed to an acquire method, or is the value saved on entry to a condition wait. The value is otherwise uninterpreted and can represent anything you like."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "java.util.concurrent.locks.AbstractQueuedSynchronizer",
      "name": "tryReleaseShared",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "arg"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [],
    "pre": [
      {
        "description": "the release argument. This value is always the one passed to a release method, or the current state value upon entry to a condition wait. The value is otherwise uninterpreted and can represent anything you like.",
        "guard": {
          "condition": "target==1",
          "description": "the release argument. This value is always the one passed to a release method, or the current state value upon entry to a condition wait. The value is otherwise uninterpreted and can represent anything you like."
        }
      }
    ]
  },
  {
    "operation": {
      "classname": "java.util.concurrent.locks.AbstractQueuedSynchronizer",
      "name": "isQueued",
      "parameterTypes": [
        "java.lang.Thread"
      ]
    },
    "identifiers": {
      "parameters": [
        "thread"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the thread is null",
        "guard": {
          "condition": "thread==null",
          "description": "if the thread is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.concurrent.locks.AbstractQueuedSynchronizer",
      "name": "owns",
      "parameterTypes": [
        "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject"
      ]
    },
    "identifiers": {
      "parameters": [
        "condition"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the condition is null",
        "guard": {
          "condition": "condition==null",
          "description": "if the condition is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.concurrent.locks.AbstractQueuedSynchronizer",
      "name": "hasWaiters",
      "parameterTypes": [
        "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject"
      ]
    },
    "identifiers": {
      "parameters": [
        "condition"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the condition is null",
        "guard": {
          "condition": "condition==null",
          "description": "if the condition is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.concurrent.locks.AbstractQueuedSynchronizer",
      "name": "getWaitQueueLength",
      "parameterTypes": [
        "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject"
      ]
    },
    "identifiers": {
      "parameters": [
        "condition"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the condition is null",
        "guard": {
          "condition": "condition==null",
          "description": "if the condition is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.concurrent.locks.AbstractQueuedSynchronizer",
      "name": "getWaitingThreads",
      "parameterTypes": [
        "java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject"
      ]
    },
    "identifiers": {
      "parameters": [
        "condition"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the condition is null",
        "guard": {
          "condition": "condition==null",
          "description": "if the condition is null"
        }
      }
    ],
    "post": [],
    "pre": []
  }
]