[
  {
    "operation": {
      "classname": "java.util.Vector",
      "name": "java.util.Vector",
      "parameterTypes": [
        "int",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "initialCapacity",
        "capacityIncrement"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if the specified initial capacity is negative",
        "guard": {
          "condition": "initialCapacity<0",
          "description": "if the specified initial capacity is negative"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Vector",
      "name": "java.util.Vector",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "initialCapacity"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IllegalArgumentException",
        "description": "throws IllegalArgumentException if the specified initial capacity is negative",
        "guard": {
          "condition": "initialCapacity<0",
          "description": "if the specified initial capacity is negative"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Vector",
      "name": "java.util.Vector",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "c"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the specified collection is null",
        "guard": {
          "condition": "c==null",
          "description": "if the specified collection is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Vector",
      "name": "copyInto",
      "parameterTypes": [
        "[Ljava.lang.Object;"
      ]
    },
    "identifiers": {
      "parameters": [
        "anArray"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the given array is null",
        "guard": {
          "condition": "anArray==null",
          "description": "if the given array is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Vector",
      "name": "setSize",
      "parameterTypes": [
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "newSize"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.ArrayIndexOutOfBoundsException",
        "description": "throws ArrayIndexOutOfBoundsException if the new size is negative",
        "guard": {
          "condition": "newSize<0",
          "description": "if the new size is negative"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Vector",
      "name": "indexOf",
      "parameterTypes": [
        "java.lang.Object",
        "int"
      ]
    },
    "identifiers": {
      "parameters": [
        "o",
        "index"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.IndexOutOfBoundsException",
        "description": "throws IndexOutOfBoundsException if the specified index is negative",
        "guard": {
          "condition": "index<0",
          "description": "if the specified index is negative"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Vector",
      "name": "lastElement",
      "parameterTypes": []
    },
    "identifiers": {
      "parameters": [],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.util.NoSuchElementException",
        "description": "throws NoSuchElementException if this vector is empty",
        "guard": {
          "condition": "target.isEmpty()",
          "description": "if this vector is empty"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Vector",
      "name": "toArray",
      "parameterTypes": [
        "[Ljava.lang.Object;"
      ]
    },
    "identifiers": {
      "parameters": [
        "a"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the given array is null",
        "guard": {
          "condition": "a==null",
          "description": "if the given array is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Vector",
      "name": "add",
      "parameterTypes": [
        "java.lang.Object"
      ]
    },
    "identifiers": {
      "parameters": [
        "e"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [],
    "post": [
      {
        "property": {
          "condition": "result.equals(e)",
          "description": "true (as specified by Collection.add(E))"
        },
        "description": "return true (as specified by Collection.add(E))",
        "guard": {
          "condition": "true",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Vector",
      "name": "containsAll",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "c"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the specified collection is null",
        "guard": {
          "condition": "c==null",
          "description": "if the specified collection is null"
        }
      }
    ],
    "post": [
      {
        "property": {
          "condition": "result==true",
          "description": "true if this Vector contains all of the elements in the specified collection"
        },
        "description": "return true if this Vector contains all of the elements in the specified collection",
        "guard": {
          "condition": "target.contains(java.lang.Object)",
          "description": ""
        }
      }
    ],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Vector",
      "name": "addAll",
      "parameterTypes": [
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "c"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the specified collection is null",
        "guard": {
          "condition": "c==null",
          "description": "if the specified collection is null"
        }
      }
    ],
    "post": [],
    "pre": []
  },
  {
    "operation": {
      "classname": "java.util.Vector",
      "name": "addAll",
      "parameterTypes": [
        "int",
        "java.util.Collection"
      ]
    },
    "identifiers": {
      "parameters": [
        "index",
        "c"
      ],
      "receiverName": "target",
      "returnName": "result"
    },
    "throws": [
      {
        "exception": "java.lang.NullPointerException",
        "description": "throws NullPointerException if the specified collection is null",
        "guard": {
          "condition": "c==null",
          "description": "if the specified collection is null"
        }
      }
    ],
    "post": [],
    "pre": []
  }
]