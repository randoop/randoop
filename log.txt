Applying visitor class randoop.reflection.DeclarationExtractor to class org.apache.commons.cli.AlreadySelectedException
ReflectionManager.apply
  class org.apache.commons.cli.AlreadySelectedException
  getMethods = 23
  getDeclaredMethods = 2
  visitor = class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
ReflectionManager visiting method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.getCause()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.getCause()
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.getCause(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.getLocalizedMessage()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.String java.lang.Throwable.getLocalizedMessage()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.getLocalizedMessage(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.getMessage()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.String java.lang.Throwable.getMessage()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.getMessage(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption()
ReflectionManager visiting method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup()
ReflectionManager visiting method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()
ReflectionManager visiting method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()
ReflectionManager visiting method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable)
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public void java.lang.Throwable.printStackTrace()
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace(java.io.PrintStream)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public void java.lang.Throwable.printStackTrace(java.io.PrintStream)
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(java.io.PrintStream), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter)
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
ReflectionManager visiting method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[]), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.toString()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.String java.lang.Throwable.toString()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.toString(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.AlreadySelectedException
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.AlreadySelectedException
Visiting constructor public org.apache.commons.cli.AlreadySelectedException(java.lang.String)
Visiting constructor public org.apache.commons.cli.AlreadySelectedException(org.apache.commons.cli.OptionGroup,org.apache.commons.cli.Option)
Applying visitor class randoop.reflection.TypeExtractor to class org.apache.commons.cli.AlreadySelectedException
ReflectionManager.apply
  class org.apache.commons.cli.AlreadySelectedException
  getMethods = 23
  getDeclaredMethods = 2
  visitor = class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
ReflectionManager visiting method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Throwable [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Object [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.Boolean [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace(), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Throwable [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.getCause()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.getCause()
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.getCause(), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Throwable [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.getLocalizedMessage()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.String java.lang.Throwable.getLocalizedMessage()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.getLocalizedMessage(), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.getMessage()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.String java.lang.Throwable.getMessage()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.getMessage(), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption()
ReflectionManager visiting method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption(), visitor=class randoop.reflection.TypeExtractor
Adding org.apache.commons.cli.Option [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup()
ReflectionManager visiting method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup(), visitor=class randoop.reflection.TypeExtractor
Adding org.apache.commons.cli.OptionGroup [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()
ReflectionManager visiting method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace(), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.StackTraceElement[] [class randoop.types.ArrayType] as candidate parameter type
ReflectionManager.apply considering method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()
ReflectionManager visiting method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed(), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Throwable[] [class randoop.types.ArrayType] as candidate parameter type
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Integer [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable)
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Throwable [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.Throwable [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public void java.lang.Throwable.printStackTrace()
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(), visitor=class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace(java.io.PrintStream)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public void java.lang.Throwable.printStackTrace(java.io.PrintStream)
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(java.io.PrintStream), visitor=class randoop.reflection.TypeExtractor
Adding java.io.PrintStream [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter)
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter), visitor=class randoop.reflection.TypeExtractor
Adding java.io.PrintWriter [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
ReflectionManager applying class randoop.reflection.TypeExtractor to method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
ReflectionManager visiting method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[]), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.StackTraceElement[] [class randoop.types.ArrayType] as candidate parameter type
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.toString()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.String java.lang.Throwable.toString()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.toString(), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Long [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Long [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.Integer [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.AlreadySelectedException
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.AlreadySelectedException
Visiting constructor public org.apache.commons.cli.AlreadySelectedException(java.lang.String)
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
Visiting constructor public org.apache.commons.cli.AlreadySelectedException(org.apache.commons.cli.OptionGroup,org.apache.commons.cli.Option)
Adding org.apache.commons.cli.OptionGroup [class randoop.types.NonParameterizedType] as candidate parameter type
Adding org.apache.commons.cli.Option [class randoop.types.NonParameterizedType] as candidate parameter type
Applying visitor class randoop.reflection.TestValueExtractor to class org.apache.commons.cli.AlreadySelectedException
ReflectionManager.apply
  class org.apache.commons.cli.AlreadySelectedException
  getMethods = 23
  getDeclaredMethods = 2
  visitor = class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
ReflectionManager visiting method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.getCause()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.getCause()
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.getCause(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.getLocalizedMessage()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.String java.lang.Throwable.getLocalizedMessage()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.getLocalizedMessage(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.getMessage()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.String java.lang.Throwable.getMessage()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.getMessage(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption()
ReflectionManager visiting method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup()
ReflectionManager visiting method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()
ReflectionManager visiting method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()
ReflectionManager visiting method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable)
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public void java.lang.Throwable.printStackTrace()
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace(java.io.PrintStream)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public void java.lang.Throwable.printStackTrace(java.io.PrintStream)
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(java.io.PrintStream), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter)
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
ReflectionManager visiting method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[]), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.toString()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.String java.lang.Throwable.toString()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.toString(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.AlreadySelectedException
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.AlreadySelectedException
Visiting constructor public org.apache.commons.cli.AlreadySelectedException(java.lang.String)
Visiting constructor public org.apache.commons.cli.AlreadySelectedException(org.apache.commons.cli.OptionGroup,org.apache.commons.cli.Option)
Applying visitor class randoop.reflection.CheckRepExtractor to class org.apache.commons.cli.AlreadySelectedException
ReflectionManager.apply
  class org.apache.commons.cli.AlreadySelectedException
  getMethods = 23
  getDeclaredMethods = 2
  visitor = class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
ReflectionManager visiting method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.getCause()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.getCause()
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.getCause(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.getLocalizedMessage()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.String java.lang.Throwable.getLocalizedMessage()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.getLocalizedMessage(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.getMessage()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.String java.lang.Throwable.getMessage()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.getMessage(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption()
ReflectionManager visiting method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup()
ReflectionManager visiting method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()
ReflectionManager visiting method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()
ReflectionManager visiting method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable)
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public void java.lang.Throwable.printStackTrace()
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace(java.io.PrintStream)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public void java.lang.Throwable.printStackTrace(java.io.PrintStream)
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(java.io.PrintStream), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter)
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
ReflectionManager visiting method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[]), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.toString()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.String java.lang.Throwable.toString()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.toString(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.AlreadySelectedException
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.AlreadySelectedException
Visiting constructor public org.apache.commons.cli.AlreadySelectedException(java.lang.String)
Visiting constructor public org.apache.commons.cli.AlreadySelectedException(org.apache.commons.cli.OptionGroup,org.apache.commons.cli.Option)
Applying visitor class randoop.reflection.DeclarationExtractor to class org.apache.commons.cli.BasicParser
ReflectionManager.apply
  class org.apache.commons.cli.BasicParser
  getMethods = 14
  getDeclaredMethods = 1
  visitor = class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Object.toString()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.String java.lang.Object.toString()
ReflectionManager visiting method public java.lang.String java.lang.Object.toString(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.BasicParser
ReflectionManager visiting method protected java.lang.String[] org.apache.commons.cli.BasicParser.flatten(org.apache.commons.cli.Options,java.lang.String[],boolean), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.BasicParser
Visiting constructor public org.apache.commons.cli.BasicParser()
Applying visitor class randoop.reflection.TypeExtractor to class org.apache.commons.cli.BasicParser
ReflectionManager.apply
  class org.apache.commons.cli.BasicParser
  getMethods = 14
  getDeclaredMethods = 1
  visitor = class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Object [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.Boolean [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Integer [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TypeExtractor
Adding org.apache.commons.cli.Options [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String[] [class randoop.types.ArrayType] as candidate parameter type
Adding org.apache.commons.cli.CommandLine [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TypeExtractor
Adding org.apache.commons.cli.Options [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String[] [class randoop.types.ArrayType] as candidate parameter type
Adding java.lang.Boolean [class randoop.types.NonParameterizedType] as candidate parameter type
Adding org.apache.commons.cli.CommandLine [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TypeExtractor
Adding org.apache.commons.cli.Options [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String[] [class randoop.types.ArrayType] as candidate parameter type
Adding java.util.Properties [class randoop.types.NonParameterizedType] as candidate parameter type
Adding org.apache.commons.cli.CommandLine [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TypeExtractor
Adding org.apache.commons.cli.Options [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String[] [class randoop.types.ArrayType] as candidate parameter type
Adding java.util.Properties [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.Boolean [class randoop.types.NonParameterizedType] as candidate parameter type
Adding org.apache.commons.cli.CommandLine [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TypeExtractor
Adding org.apache.commons.cli.Option [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.util.ListIterator [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public java.lang.String java.lang.Object.toString()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.String java.lang.Object.toString()
ReflectionManager visiting method public java.lang.String java.lang.Object.toString(), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Long [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Long [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.Integer [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.BasicParser
ReflectionManager visiting method protected java.lang.String[] org.apache.commons.cli.BasicParser.flatten(org.apache.commons.cli.Options,java.lang.String[],boolean), visitor=class randoop.reflection.TypeExtractor
Adding org.apache.commons.cli.Options [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String[] [class randoop.types.ArrayType] as candidate parameter type
Adding java.lang.Boolean [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String[] [class randoop.types.ArrayType] as candidate parameter type
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.BasicParser
Visiting constructor public org.apache.commons.cli.BasicParser()
Applying visitor class randoop.reflection.TestValueExtractor to class org.apache.commons.cli.BasicParser
ReflectionManager.apply
  class org.apache.commons.cli.BasicParser
  getMethods = 14
  getDeclaredMethods = 1
  visitor = class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Object.toString()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.String java.lang.Object.toString()
ReflectionManager visiting method public java.lang.String java.lang.Object.toString(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.BasicParser
ReflectionManager visiting method protected java.lang.String[] org.apache.commons.cli.BasicParser.flatten(org.apache.commons.cli.Options,java.lang.String[],boolean), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.BasicParser
Visiting constructor public org.apache.commons.cli.BasicParser()
Applying visitor class randoop.reflection.CheckRepExtractor to class org.apache.commons.cli.BasicParser
ReflectionManager.apply
  class org.apache.commons.cli.BasicParser
  getMethods = 14
  getDeclaredMethods = 1
  visitor = class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Object.toString()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.String java.lang.Object.toString()
ReflectionManager visiting method public java.lang.String java.lang.Object.toString(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.BasicParser
ReflectionManager visiting method protected java.lang.String[] org.apache.commons.cli.BasicParser.flatten(org.apache.commons.cli.Options,java.lang.String[],boolean), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.BasicParser
Visiting constructor public org.apache.commons.cli.BasicParser()
Applying visitor class randoop.reflection.DeclarationExtractor to class org.apache.commons.cli.CommandLine
ReflectionManager.apply
  class org.apache.commons.cli.CommandLine
  getMethods = 25
  getDeclaredMethods = 19
  visitor = class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.util.List org.apache.commons.cli.CommandLine.getArgList()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.util.List org.apache.commons.cli.CommandLine.getArgList()
ReflectionManager visiting method public java.util.List org.apache.commons.cli.CommandLine.getArgList(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs()
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char)
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String)
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String)
ReflectionManager visiting method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char)
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String)
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions()
ReflectionManager visiting method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public boolean org.apache.commons.cli.CommandLine.hasOption(char)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public boolean org.apache.commons.cli.CommandLine.hasOption(char)
ReflectionManager visiting method public boolean org.apache.commons.cli.CommandLine.hasOption(char), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String)
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String)
ReflectionManager visiting method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator()
ReflectionManager visiting method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Object.toString()
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public java.lang.String java.lang.Object.toString()
ReflectionManager visiting method public java.lang.String java.lang.Object.toString(), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.CommandLine
ReflectionManager visiting method void org.apache.commons.cli.CommandLine.addArg(java.lang.String), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager visiting method void org.apache.commons.cli.CommandLine.addOption(org.apache.commons.cli.Option), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager visiting method private org.apache.commons.cli.Option org.apache.commons.cli.CommandLine.resolveOption(java.lang.String), visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.CommandLine
Will not use non-accessible constructor: org.apache.commons.cli.CommandLine()
Applying visitor class randoop.reflection.TypeExtractor to class org.apache.commons.cli.CommandLine
ReflectionManager.apply
  class org.apache.commons.cli.CommandLine
  getMethods = 25
  getDeclaredMethods = 19
  visitor = class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Object [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.Boolean [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public java.util.List org.apache.commons.cli.CommandLine.getArgList()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.util.List org.apache.commons.cli.CommandLine.getArgList()
ReflectionManager visiting method public java.util.List org.apache.commons.cli.CommandLine.getArgList(), visitor=class randoop.reflection.TypeExtractor
Adding java.util.List [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs()
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs(), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String[] [class randoop.types.ArrayType] as candidate parameter type
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char)
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Character [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.Object [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String)
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.Object [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String)
ReflectionManager visiting method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.util.Properties [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Character [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Character [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char)
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Character [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String[] [class randoop.types.ArrayType] as candidate parameter type
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String)
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String[] [class randoop.types.ArrayType] as candidate parameter type
ReflectionManager.apply considering method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions()
ReflectionManager visiting method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions(), visitor=class randoop.reflection.TypeExtractor
Adding org.apache.commons.cli.Option[] [class randoop.types.ArrayType] as candidate parameter type
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.Object [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public boolean org.apache.commons.cli.CommandLine.hasOption(char)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public boolean org.apache.commons.cli.CommandLine.hasOption(char)
ReflectionManager visiting method public boolean org.apache.commons.cli.CommandLine.hasOption(char), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Character [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.Boolean [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String)
ReflectionManager applying class randoop.reflection.TypeExtractor to method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String)
ReflectionManager visiting method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.Boolean [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Integer [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator()
ReflectionManager visiting method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator(), visitor=class randoop.reflection.TypeExtractor
Adding java.util.Iterator [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Object.toString()
ReflectionManager applying class randoop.reflection.TypeExtractor to method public java.lang.String java.lang.Object.toString()
ReflectionManager visiting method public java.lang.String java.lang.Object.toString(), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Long [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.TypeExtractor
Adding java.lang.Long [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.Integer [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.CommandLine
ReflectionManager visiting method void org.apache.commons.cli.CommandLine.addArg(java.lang.String), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager visiting method void org.apache.commons.cli.CommandLine.addOption(org.apache.commons.cli.Option), visitor=class randoop.reflection.TypeExtractor
Adding org.apache.commons.cli.Option [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager visiting method private org.apache.commons.cli.Option org.apache.commons.cli.CommandLine.resolveOption(java.lang.String), visitor=class randoop.reflection.TypeExtractor
Adding java.lang.String [class randoop.types.NonParameterizedType] as candidate parameter type
Adding org.apache.commons.cli.Option [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.CommandLine
Will not use non-accessible constructor: org.apache.commons.cli.CommandLine()
Applying visitor class randoop.reflection.TestValueExtractor to class org.apache.commons.cli.CommandLine
ReflectionManager.apply
  class org.apache.commons.cli.CommandLine
  getMethods = 25
  getDeclaredMethods = 19
  visitor = class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.util.List org.apache.commons.cli.CommandLine.getArgList()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.util.List org.apache.commons.cli.CommandLine.getArgList()
ReflectionManager visiting method public java.util.List org.apache.commons.cli.CommandLine.getArgList(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs()
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char)
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String)
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String)
ReflectionManager visiting method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char)
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String)
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions()
ReflectionManager visiting method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public boolean org.apache.commons.cli.CommandLine.hasOption(char)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public boolean org.apache.commons.cli.CommandLine.hasOption(char)
ReflectionManager visiting method public boolean org.apache.commons.cli.CommandLine.hasOption(char), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String)
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String)
ReflectionManager visiting method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator()
ReflectionManager visiting method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Object.toString()
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public java.lang.String java.lang.Object.toString()
ReflectionManager visiting method public java.lang.String java.lang.Object.toString(), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.CommandLine
ReflectionManager visiting method void org.apache.commons.cli.CommandLine.addArg(java.lang.String), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager visiting method void org.apache.commons.cli.CommandLine.addOption(org.apache.commons.cli.Option), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager visiting method private org.apache.commons.cli.Option org.apache.commons.cli.CommandLine.resolveOption(java.lang.String), visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.CommandLine
Will not use non-accessible constructor: org.apache.commons.cli.CommandLine()
Applying visitor class randoop.reflection.CheckRepExtractor to class org.apache.commons.cli.CommandLine
ReflectionManager.apply
  class org.apache.commons.cli.CommandLine
  getMethods = 25
  getDeclaredMethods = 19
  visitor = class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.util.List org.apache.commons.cli.CommandLine.getArgList()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.util.List org.apache.commons.cli.CommandLine.getArgList()
ReflectionManager visiting method public java.util.List org.apache.commons.cli.CommandLine.getArgList(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs()
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char)
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String)
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String)
ReflectionManager visiting method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char)
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String)
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions()
ReflectionManager visiting method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public boolean org.apache.commons.cli.CommandLine.hasOption(char)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public boolean org.apache.commons.cli.CommandLine.hasOption(char)
ReflectionManager visiting method public boolean org.apache.commons.cli.CommandLine.hasOption(char), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String)
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String)
ReflectionManager visiting method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator()
ReflectionManager visiting method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Object.toString()
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public java.lang.String java.lang.Object.toString()
ReflectionManager visiting method public java.lang.String java.lang.Object.toString(), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.CommandLine
ReflectionManager visiting method void org.apache.commons.cli.CommandLine.addArg(java.lang.String), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager visiting method void org.apache.commons.cli.CommandLine.addOption(org.apache.commons.cli.Option), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager visiting method private org.apache.commons.cli.Option org.apache.commons.cli.CommandLine.resolveOption(java.lang.String), visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.CommandLine
Will not use non-accessible constructor: org.apache.commons.cli.CommandLine()
Applying visitor class randoop.reflection.DeclarationExtractor to class org.apache.commons.cli.CommandLineParser
ReflectionManager.apply
  interface org.apache.commons.cli.CommandLineParser
  getMethods = 2
  getDeclaredMethods = 2
  visitor = class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply considering method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.DeclarationExtractor to method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.DeclarationExtractor
ReflectionManager.apply done with getMethods for class interface org.apache.commons.cli.CommandLineParser
ReflectionManager.apply done with getDeclaredMethods for class interface org.apache.commons.cli.CommandLineParser
Applying visitor class randoop.reflection.TypeExtractor to class org.apache.commons.cli.CommandLineParser
ReflectionManager.apply
  interface org.apache.commons.cli.CommandLineParser
  getMethods = 2
  getDeclaredMethods = 2
  visitor = class randoop.reflection.TypeExtractor
ReflectionManager.apply considering method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TypeExtractor
Adding org.apache.commons.cli.Options [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String[] [class randoop.types.ArrayType] as candidate parameter type
Adding org.apache.commons.cli.CommandLine [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply considering method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TypeExtractor to method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TypeExtractor
Adding org.apache.commons.cli.Options [class randoop.types.NonParameterizedType] as candidate parameter type
Adding java.lang.String[] [class randoop.types.ArrayType] as candidate parameter type
Adding java.lang.Boolean [class randoop.types.NonParameterizedType] as candidate parameter type
Adding org.apache.commons.cli.CommandLine [class randoop.types.NonParameterizedType] as candidate parameter type
ReflectionManager.apply done with getMethods for class interface org.apache.commons.cli.CommandLineParser
ReflectionManager.apply done with getDeclaredMethods for class interface org.apache.commons.cli.CommandLineParser
Applying visitor class randoop.reflection.TestValueExtractor to class org.apache.commons.cli.CommandLineParser
ReflectionManager.apply
  interface org.apache.commons.cli.CommandLineParser
  getMethods = 2
  getDeclaredMethods = 2
  visitor = class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply considering method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.TestValueExtractor to method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.TestValueExtractor
ReflectionManager.apply done with getMethods for class interface org.apache.commons.cli.CommandLineParser
ReflectionManager.apply done with getDeclaredMethods for class interface org.apache.commons.cli.CommandLineParser
Applying visitor class randoop.reflection.CheckRepExtractor to class org.apache.commons.cli.CommandLineParser
ReflectionManager.apply
  interface org.apache.commons.cli.CommandLineParser
  getMethods = 2
  getDeclaredMethods = 2
  visitor = class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply considering method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.CheckRepExtractor to method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.CheckRepExtractor
ReflectionManager.apply done with getMethods for class interface org.apache.commons.cli.CommandLineParser
ReflectionManager.apply done with getDeclaredMethods for class interface org.apache.commons.cli.CommandLineParser
addOperationsFromClasses: classType=org.apache.commons.cli.AlreadySelectedException
Applying visitor class randoop.reflection.OperationExtractor to class org.apache.commons.cli.AlreadySelectedException
ReflectionManager.apply
  class org.apache.commons.cli.AlreadySelectedException
  getMethods = 23
  getDeclaredMethods = 2
  visitor = class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
ReflectionManager visiting method public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace(), visitor=class randoop.reflection.OperationExtractor
Will not use: public synchronized java.lang.Throwable java.lang.Throwable.fillInStackTrace()
  reason: Randoop avoids exploring Exception class methods, to avoid nontermination.
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.getCause()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.getCause()
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.getCause(), visitor=class randoop.reflection.OperationExtractor
Will not use: public synchronized java.lang.Throwable java.lang.Throwable.getCause()
  reason: Randoop avoids exploring Exception class methods, to avoid nontermination.
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.getLocalizedMessage()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.String java.lang.Throwable.getLocalizedMessage()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.getLocalizedMessage(), visitor=class randoop.reflection.OperationExtractor
Will not use: public java.lang.String java.lang.Throwable.getLocalizedMessage()
  reason: Randoop avoids exploring Exception class methods, to avoid nontermination.
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.getMessage()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.String java.lang.Throwable.getMessage()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.getMessage(), visitor=class randoop.reflection.OperationExtractor
Will not use: public java.lang.String java.lang.Throwable.getMessage()
  reason: Randoop avoids exploring Exception class methods, to avoid nontermination.
ReflectionManager.apply considering method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption()
ReflectionManager visiting method public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup()
ReflectionManager visiting method public org.apache.commons.cli.OptionGroup org.apache.commons.cli.AlreadySelectedException.getOptionGroup(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()
ReflectionManager visiting method public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace(), visitor=class randoop.reflection.OperationExtractor
Will not use: public java.lang.StackTraceElement[] java.lang.Throwable.getStackTrace()
  reason: Randoop avoids exploring Exception class methods, to avoid nontermination.
ReflectionManager.apply considering method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()
ReflectionManager visiting method public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable)
ReflectionManager visiting method public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable), visitor=class randoop.reflection.OperationExtractor
Will not use: public synchronized java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable)
  reason: Randoop avoids exploring Exception class methods, to avoid nontermination.
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public void java.lang.Throwable.printStackTrace()
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(), visitor=class randoop.reflection.OperationExtractor
Will not use: public void java.lang.Throwable.printStackTrace()
  reason: Randoop avoids exploring Exception class methods, to avoid nontermination.
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace(java.io.PrintStream)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public void java.lang.Throwable.printStackTrace(java.io.PrintStream)
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(java.io.PrintStream), visitor=class randoop.reflection.OperationExtractor
Will not use: public void java.lang.Throwable.printStackTrace(java.io.PrintStream)
  reason: Randoop avoids exploring Exception class methods, to avoid nontermination.
ReflectionManager.apply considering method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter)
ReflectionManager visiting method public void java.lang.Throwable.printStackTrace(java.io.PrintWriter), visitor=class randoop.reflection.OperationExtractor
Will not use: public void java.lang.Throwable.printStackTrace(java.io.PrintWriter)
  reason: Randoop avoids exploring Exception class methods, to avoid nontermination.
ReflectionManager.apply considering method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
ReflectionManager applying class randoop.reflection.OperationExtractor to method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
ReflectionManager visiting method public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[]), visitor=class randoop.reflection.OperationExtractor
Will not use: public void java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])
  reason: Randoop avoids exploring Exception class methods, to avoid nontermination.
ReflectionManager.apply considering method public java.lang.String java.lang.Throwable.toString()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.String java.lang.Throwable.toString()
ReflectionManager visiting method public java.lang.String java.lang.Throwable.toString(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.AlreadySelectedException
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.AlreadySelectedException
Visiting constructor public org.apache.commons.cli.AlreadySelectedException(java.lang.String)
Visiting constructor public org.apache.commons.cli.AlreadySelectedException(org.apache.commons.cli.OptionGroup,org.apache.commons.cli.Option)
addOperationsFromClasses: classType=org.apache.commons.cli.AlreadySelectedException
    java.lang.Object.getClass : (java.lang.Object) -> java.lang.Class<?>
    java.lang.Throwable.addSuppressed : (java.lang.Throwable, java.lang.Throwable) -> void
    java.lang.Throwable.getSuppressed : (java.lang.Throwable) -> java.lang.Throwable[]
    java.lang.Throwable.toString : (java.lang.Throwable) -> java.lang.String
    org.apache.commons.cli.AlreadySelectedException.<init> : (java.lang.String) -> org.apache.commons.cli.AlreadySelectedException
    org.apache.commons.cli.AlreadySelectedException.<init> : (org.apache.commons.cli.OptionGroup, org.apache.commons.cli.Option) -> org.apache.commons.cli.AlreadySelectedException
    org.apache.commons.cli.AlreadySelectedException.getOption : (org.apache.commons.cli.AlreadySelectedException) -> org.apache.commons.cli.Option
    org.apache.commons.cli.AlreadySelectedException.getOptionGroup : (org.apache.commons.cli.AlreadySelectedException) -> org.apache.commons.cli.OptionGroup
addOperationsFromClasses: classType=org.apache.commons.cli.BasicParser
Applying visitor class randoop.reflection.OperationExtractor to class org.apache.commons.cli.BasicParser
ReflectionManager.apply
  class org.apache.commons.cli.BasicParser
  getMethods = 14
  getDeclaredMethods = 1
  visitor = class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public void org.apache.commons.cli.Parser.processArgs(org.apache.commons.cli.Option,java.util.ListIterator) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Object.toString()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.String java.lang.Object.toString()
ReflectionManager visiting method public java.lang.String java.lang.Object.toString(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.BasicParser
ReflectionManager visiting method protected java.lang.String[] org.apache.commons.cli.BasicParser.flatten(org.apache.commons.cli.Options,java.lang.String[],boolean), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.BasicParser
Visiting constructor public org.apache.commons.cli.BasicParser()
addOperationsFromClasses: classType=org.apache.commons.cli.BasicParser
    java.lang.Object.getClass : (java.lang.Object) -> java.lang.Class<?>
    org.apache.commons.cli.BasicParser.<init> : () -> org.apache.commons.cli.BasicParser
    org.apache.commons.cli.BasicParser.flatten : (org.apache.commons.cli.BasicParser, org.apache.commons.cli.Options, java.lang.String[], boolean) -> java.lang.String[]
    org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[]) -> org.apache.commons.cli.CommandLine
    org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], boolean) -> org.apache.commons.cli.CommandLine
    org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], java.util.Properties) -> org.apache.commons.cli.CommandLine
    org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], java.util.Properties, boolean) -> org.apache.commons.cli.CommandLine
    org.apache.commons.cli.Parser.processArgs : (org.apache.commons.cli.Parser, org.apache.commons.cli.Option, java.util.ListIterator) -> void
addOperationsFromClasses: classType=org.apache.commons.cli.CommandLine
Applying visitor class randoop.reflection.OperationExtractor to class org.apache.commons.cli.CommandLine
ReflectionManager.apply
  class org.apache.commons.cli.CommandLine
  getMethods = 25
  getDeclaredMethods = 19
  visitor = class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public boolean java.lang.Object.equals(java.lang.Object)
ReflectionManager visiting method public boolean java.lang.Object.equals(java.lang.Object), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.util.List org.apache.commons.cli.CommandLine.getArgList()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.util.List org.apache.commons.cli.CommandLine.getArgList()
ReflectionManager visiting method public java.util.List org.apache.commons.cli.CommandLine.getArgList(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs()
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getArgs(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final native java.lang.Class java.lang.Object.getClass()
ReflectionManager visiting method public final native java.lang.Class<?> java.lang.Object.getClass(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char)
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(char), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String)
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getOptionObject(java.lang.String), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String)
ReflectionManager visiting method public java.util.Properties org.apache.commons.cli.CommandLine.getOptionProperties(java.lang.String), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(char,java.lang.String), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String)
ReflectionManager visiting method public java.lang.String org.apache.commons.cli.CommandLine.getOptionValue(java.lang.String,java.lang.String), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char)
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(char), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String)
ReflectionManager visiting method public java.lang.String[] org.apache.commons.cli.CommandLine.getOptionValues(java.lang.String), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions()
ReflectionManager visiting method public org.apache.commons.cli.Option[] org.apache.commons.cli.CommandLine.getOptions(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public java.lang.Object org.apache.commons.cli.CommandLine.getParsedOptionValue(java.lang.String) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public boolean org.apache.commons.cli.CommandLine.hasOption(char)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public boolean org.apache.commons.cli.CommandLine.hasOption(char)
ReflectionManager visiting method public boolean org.apache.commons.cli.CommandLine.hasOption(char), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String)
ReflectionManager applying class randoop.reflection.OperationExtractor to method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String)
ReflectionManager visiting method public boolean org.apache.commons.cli.CommandLine.hasOption(java.lang.String), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public native int java.lang.Object.hashCode()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public native int java.lang.Object.hashCode()
ReflectionManager visiting method public native int java.lang.Object.hashCode(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator()
ReflectionManager visiting method public java.util.Iterator org.apache.commons.cli.CommandLine.iterator(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notify()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final native void java.lang.Object.notify()
ReflectionManager visiting method public final native void java.lang.Object.notify(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.notifyAll()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final native void java.lang.Object.notifyAll()
ReflectionManager visiting method public final native void java.lang.Object.notifyAll(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public java.lang.String java.lang.Object.toString()
ReflectionManager applying class randoop.reflection.OperationExtractor to method public java.lang.String java.lang.Object.toString()
ReflectionManager visiting method public java.lang.String java.lang.Object.toString(), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final void java.lang.Object.wait() throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait() throws java.lang.InterruptedException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException
ReflectionManager visiting method public final native void java.lang.Object.wait(long) throws java.lang.InterruptedException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException
ReflectionManager visiting method public final void java.lang.Object.wait(long,int) throws java.lang.InterruptedException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply done with getMethods for class class org.apache.commons.cli.CommandLine
ReflectionManager visiting method void org.apache.commons.cli.CommandLine.addArg(java.lang.String), visitor=class randoop.reflection.OperationExtractor
ReflectionManager visiting method void org.apache.commons.cli.CommandLine.addOption(org.apache.commons.cli.Option), visitor=class randoop.reflection.OperationExtractor
ReflectionManager visiting method private org.apache.commons.cli.Option org.apache.commons.cli.CommandLine.resolveOption(java.lang.String), visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply done with getDeclaredMethods for class class org.apache.commons.cli.CommandLine
Will not use non-accessible constructor: org.apache.commons.cli.CommandLine()
addOperationsFromClasses: classType=org.apache.commons.cli.CommandLine
    java.lang.Object.getClass : (java.lang.Object) -> java.lang.Class<?>
    org.apache.commons.cli.CommandLine.addArg : (org.apache.commons.cli.CommandLine, java.lang.String) -> void
    org.apache.commons.cli.CommandLine.addOption : (org.apache.commons.cli.CommandLine, org.apache.commons.cli.Option) -> void
    org.apache.commons.cli.CommandLine.getArgList : (org.apache.commons.cli.CommandLine) -> java.util.List
    org.apache.commons.cli.CommandLine.getArgs : (org.apache.commons.cli.CommandLine) -> java.lang.String[]
    org.apache.commons.cli.CommandLine.getOptionObject : (org.apache.commons.cli.CommandLine, char) -> java.lang.Object
    org.apache.commons.cli.CommandLine.getOptionObject : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.Object
    org.apache.commons.cli.CommandLine.getOptionProperties : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.util.Properties
    org.apache.commons.cli.CommandLine.getOptionValue : (org.apache.commons.cli.CommandLine, char) -> java.lang.String
    org.apache.commons.cli.CommandLine.getOptionValue : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.String
    org.apache.commons.cli.CommandLine.getOptionValue : (org.apache.commons.cli.CommandLine, char, java.lang.String) -> java.lang.String
    org.apache.commons.cli.CommandLine.getOptionValue : (org.apache.commons.cli.CommandLine, java.lang.String, java.lang.String) -> java.lang.String
    org.apache.commons.cli.CommandLine.getOptionValues : (org.apache.commons.cli.CommandLine, char) -> java.lang.String[]
    org.apache.commons.cli.CommandLine.getOptionValues : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.String[]
    org.apache.commons.cli.CommandLine.getOptions : (org.apache.commons.cli.CommandLine) -> org.apache.commons.cli.Option[]
    org.apache.commons.cli.CommandLine.getParsedOptionValue : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.Object
    org.apache.commons.cli.CommandLine.hasOption : (org.apache.commons.cli.CommandLine, char) -> boolean
    org.apache.commons.cli.CommandLine.hasOption : (org.apache.commons.cli.CommandLine, java.lang.String) -> boolean
    org.apache.commons.cli.CommandLine.iterator : (org.apache.commons.cli.CommandLine) -> java.util.Iterator
    org.apache.commons.cli.CommandLine.resolveOption : (org.apache.commons.cli.CommandLine, java.lang.String) -> org.apache.commons.cli.Option
addOperationsFromClasses: classType=org.apache.commons.cli.CommandLineParser
Applying visitor class randoop.reflection.OperationExtractor to class org.apache.commons.cli.CommandLineParser
ReflectionManager.apply
  interface org.apache.commons.cli.CommandLineParser
  getMethods = 2
  getDeclaredMethods = 2
  visitor = class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply considering method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager applying class randoop.reflection.OperationExtractor to method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException
ReflectionManager visiting method public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[],boolean) throws org.apache.commons.cli.ParseException, visitor=class randoop.reflection.OperationExtractor
ReflectionManager.apply done with getMethods for class interface org.apache.commons.cli.CommandLineParser
ReflectionManager.apply done with getDeclaredMethods for class interface org.apache.commons.cli.CommandLineParser
addOperationsFromClasses: classType=org.apache.commons.cli.CommandLineParser
    org.apache.commons.cli.CommandLineParser.parse : (org.apache.commons.cli.CommandLineParser, org.apache.commons.cli.Options, java.lang.String[]) -> org.apache.commons.cli.CommandLine
    org.apache.commons.cli.CommandLineParser.parse : (org.apache.commons.cli.CommandLineParser, org.apache.commons.cli.Options, java.lang.String[], boolean) -> org.apache.commons.cli.CommandLine
Adding sequence #1 of type byte of length 1
Adding sequence #2 of type byte of length 1
Adding sequence #3 of type byte of length 1
Adding sequence #4 of type byte of length 1
Adding sequence #5 of type byte of length 1
Adding sequence #1 of type short of length 1
Adding sequence #2 of type short of length 1
Adding sequence #3 of type short of length 1
Adding sequence #4 of type short of length 1
Adding sequence #5 of type short of length 1
Adding sequence #1 of type int of length 1
Adding sequence #2 of type int of length 1
Adding sequence #3 of type int of length 1
Adding sequence #4 of type int of length 1
Adding sequence #5 of type int of length 1
Adding sequence #1 of type long of length 1
Adding sequence #2 of type long of length 1
Adding sequence #3 of type long of length 1
Adding sequence #4 of type long of length 1
Adding sequence #5 of type long of length 1
Adding sequence #1 of type float of length 1
Adding sequence #2 of type float of length 1
Adding sequence #3 of type float of length 1
Adding sequence #4 of type float of length 1
Adding sequence #5 of type float of length 1
Adding sequence #1 of type double of length 1
Adding sequence #2 of type double of length 1
Adding sequence #3 of type double of length 1
Adding sequence #4 of type double of length 1
Adding sequence #5 of type double of length 1
Adding sequence #1 of type char of length 1
Adding sequence #2 of type char of length 1
Adding sequence #3 of type char of length 1
Adding sequence #4 of type char of length 1
Adding sequence #1 of type boolean of length 1
Adding sequence #2 of type boolean of length 1
Adding sequence #1 of type java.lang.String of length 1
Adding sequence #2 of type java.lang.String of length 1
Operations: (37)
  java.lang.Object.<init> : () -> java.lang.Object
  java.lang.Object.getClass : (java.lang.Object) -> java.lang.Class<?>
  java.lang.Throwable.addSuppressed : (java.lang.Throwable, java.lang.Throwable) -> void
  java.lang.Throwable.getSuppressed : (java.lang.Throwable) -> java.lang.Throwable[]
  java.lang.Throwable.toString : (java.lang.Throwable) -> java.lang.String
  org.apache.commons.cli.AlreadySelectedException.<init> : (java.lang.String) -> org.apache.commons.cli.AlreadySelectedException
  org.apache.commons.cli.AlreadySelectedException.<init> : (org.apache.commons.cli.OptionGroup, org.apache.commons.cli.Option) -> org.apache.commons.cli.AlreadySelectedException
  org.apache.commons.cli.AlreadySelectedException.getOption : (org.apache.commons.cli.AlreadySelectedException) -> org.apache.commons.cli.Option
  org.apache.commons.cli.AlreadySelectedException.getOptionGroup : (org.apache.commons.cli.AlreadySelectedException) -> org.apache.commons.cli.OptionGroup
  org.apache.commons.cli.BasicParser.<init> : () -> org.apache.commons.cli.BasicParser
  org.apache.commons.cli.BasicParser.flatten : (org.apache.commons.cli.BasicParser, org.apache.commons.cli.Options, java.lang.String[], boolean) -> java.lang.String[]
  org.apache.commons.cli.CommandLine.addArg : (org.apache.commons.cli.CommandLine, java.lang.String) -> void
  org.apache.commons.cli.CommandLine.addOption : (org.apache.commons.cli.CommandLine, org.apache.commons.cli.Option) -> void
  org.apache.commons.cli.CommandLine.getArgList : (org.apache.commons.cli.CommandLine) -> java.util.List
  org.apache.commons.cli.CommandLine.getArgs : (org.apache.commons.cli.CommandLine) -> java.lang.String[]
  org.apache.commons.cli.CommandLine.getOptionObject : (org.apache.commons.cli.CommandLine, char) -> java.lang.Object
  org.apache.commons.cli.CommandLine.getOptionObject : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.Object
  org.apache.commons.cli.CommandLine.getOptionProperties : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.util.Properties
  org.apache.commons.cli.CommandLine.getOptionValue : (org.apache.commons.cli.CommandLine, char) -> java.lang.String
  org.apache.commons.cli.CommandLine.getOptionValue : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.String
  org.apache.commons.cli.CommandLine.getOptionValue : (org.apache.commons.cli.CommandLine, char, java.lang.String) -> java.lang.String
  org.apache.commons.cli.CommandLine.getOptionValue : (org.apache.commons.cli.CommandLine, java.lang.String, java.lang.String) -> java.lang.String
  org.apache.commons.cli.CommandLine.getOptionValues : (org.apache.commons.cli.CommandLine, char) -> java.lang.String[]
  org.apache.commons.cli.CommandLine.getOptionValues : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.String[]
  org.apache.commons.cli.CommandLine.getOptions : (org.apache.commons.cli.CommandLine) -> org.apache.commons.cli.Option[]
  org.apache.commons.cli.CommandLine.getParsedOptionValue : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.Object
  org.apache.commons.cli.CommandLine.hasOption : (org.apache.commons.cli.CommandLine, char) -> boolean
  org.apache.commons.cli.CommandLine.hasOption : (org.apache.commons.cli.CommandLine, java.lang.String) -> boolean
  org.apache.commons.cli.CommandLine.iterator : (org.apache.commons.cli.CommandLine) -> java.util.Iterator
  org.apache.commons.cli.CommandLine.resolveOption : (org.apache.commons.cli.CommandLine, java.lang.String) -> org.apache.commons.cli.Option
  org.apache.commons.cli.CommandLineParser.parse : (org.apache.commons.cli.CommandLineParser, org.apache.commons.cli.Options, java.lang.String[]) -> org.apache.commons.cli.CommandLine
  org.apache.commons.cli.CommandLineParser.parse : (org.apache.commons.cli.CommandLineParser, org.apache.commons.cli.Options, java.lang.String[], boolean) -> org.apache.commons.cli.CommandLine
  org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[]) -> org.apache.commons.cli.CommandLine
  org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], boolean) -> org.apache.commons.cli.CommandLine
  org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], java.util.Properties) -> org.apache.commons.cli.CommandLine
  org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], java.util.Properties, boolean) -> org.apache.commons.cli.CommandLine
  org.apache.commons.cli.Parser.processArgs : (org.apache.commons.cli.Parser, org.apache.commons.cli.Option, java.util.ListIterator) -> void
getSequencesForType(boolean, true, false)
getSequencesForType(boolean) => 2 sequences.
getSequencesForType(byte, true, false)
getSequencesForType(byte) => 5 sequences.
getSequencesForType(char, true, false)
getSequencesForType(char) => 4 sequences.
getSequencesForType(double, true, false)
getSequencesForType(double) => 5 sequences.
getSequencesForType(float, true, false)
getSequencesForType(float) => 5 sequences.
getSequencesForType(int, true, false)
getSequencesForType(int) => 5 sequences.
getSequencesForType(long, true, false)
getSequencesForType(long) => 5 sequences.
getSequencesForType(short, true, false)
getSequencesForType(short) => 5 sequences.
getSequencesForType(java.lang.String, true, false)
getSequencesForType(java.lang.String) => 2 sequences.
Operations: (37)
  java.lang.Object.<init> : () -> java.lang.Object
  java.lang.Object.getClass : (java.lang.Object) -> java.lang.Class<?>
  java.lang.Throwable.addSuppressed : (java.lang.Throwable, java.lang.Throwable) -> void
  java.lang.Throwable.getSuppressed : (java.lang.Throwable) -> java.lang.Throwable[]
  java.lang.Throwable.toString : (java.lang.Throwable) -> java.lang.String
  org.apache.commons.cli.AlreadySelectedException.<init> : (java.lang.String) -> org.apache.commons.cli.AlreadySelectedException
  org.apache.commons.cli.AlreadySelectedException.<init> : (org.apache.commons.cli.OptionGroup, org.apache.commons.cli.Option) -> org.apache.commons.cli.AlreadySelectedException
  org.apache.commons.cli.AlreadySelectedException.getOption : (org.apache.commons.cli.AlreadySelectedException) -> org.apache.commons.cli.Option
  org.apache.commons.cli.AlreadySelectedException.getOptionGroup : (org.apache.commons.cli.AlreadySelectedException) -> org.apache.commons.cli.OptionGroup
  org.apache.commons.cli.BasicParser.<init> : () -> org.apache.commons.cli.BasicParser
  org.apache.commons.cli.BasicParser.flatten : (org.apache.commons.cli.BasicParser, org.apache.commons.cli.Options, java.lang.String[], boolean) -> java.lang.String[]
  org.apache.commons.cli.CommandLine.addArg : (org.apache.commons.cli.CommandLine, java.lang.String) -> void
  org.apache.commons.cli.CommandLine.addOption : (org.apache.commons.cli.CommandLine, org.apache.commons.cli.Option) -> void
  org.apache.commons.cli.CommandLine.getArgList : (org.apache.commons.cli.CommandLine) -> java.util.List
  org.apache.commons.cli.CommandLine.getArgs : (org.apache.commons.cli.CommandLine) -> java.lang.String[]
  org.apache.commons.cli.CommandLine.getOptionObject : (org.apache.commons.cli.CommandLine, char) -> java.lang.Object
  org.apache.commons.cli.CommandLine.getOptionObject : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.Object
  org.apache.commons.cli.CommandLine.getOptionProperties : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.util.Properties
  org.apache.commons.cli.CommandLine.getOptionValue : (org.apache.commons.cli.CommandLine, char) -> java.lang.String
  org.apache.commons.cli.CommandLine.getOptionValue : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.String
  org.apache.commons.cli.CommandLine.getOptionValue : (org.apache.commons.cli.CommandLine, char, java.lang.String) -> java.lang.String
  org.apache.commons.cli.CommandLine.getOptionValue : (org.apache.commons.cli.CommandLine, java.lang.String, java.lang.String) -> java.lang.String
  org.apache.commons.cli.CommandLine.getOptionValues : (org.apache.commons.cli.CommandLine, char) -> java.lang.String[]
  org.apache.commons.cli.CommandLine.getOptionValues : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.String[]
  org.apache.commons.cli.CommandLine.getOptions : (org.apache.commons.cli.CommandLine) -> org.apache.commons.cli.Option[]
  org.apache.commons.cli.CommandLine.getParsedOptionValue : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.Object
  org.apache.commons.cli.CommandLine.hasOption : (org.apache.commons.cli.CommandLine, char) -> boolean
  org.apache.commons.cli.CommandLine.hasOption : (org.apache.commons.cli.CommandLine, java.lang.String) -> boolean
  org.apache.commons.cli.CommandLine.iterator : (org.apache.commons.cli.CommandLine) -> java.util.Iterator
  org.apache.commons.cli.CommandLine.resolveOption : (org.apache.commons.cli.CommandLine, java.lang.String) -> org.apache.commons.cli.Option
  org.apache.commons.cli.CommandLineParser.parse : (org.apache.commons.cli.CommandLineParser, org.apache.commons.cli.Options, java.lang.String[]) -> org.apache.commons.cli.CommandLine
  org.apache.commons.cli.CommandLineParser.parse : (org.apache.commons.cli.CommandLineParser, org.apache.commons.cli.Options, java.lang.String[], boolean) -> org.apache.commons.cli.CommandLine
  org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[]) -> org.apache.commons.cli.CommandLine
  org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], boolean) -> org.apache.commons.cli.CommandLine
  org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], java.util.Properties) -> org.apache.commons.cli.CommandLine
  org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], java.util.Properties, boolean) -> org.apache.commons.cli.CommandLine
  org.apache.commons.cli.Parser.processArgs : (org.apache.commons.cli.Parser, org.apache.commons.cli.Option, java.util.ListIterator) -> void
Initial sequences (seeds):
Type byte: 5 sequences
  #0: byte byte0 = (byte)-1;
  #1: byte byte0 = (byte)0;
  #2: byte byte0 = (byte)1;
  #3: byte byte0 = (byte)10;
  #4: byte byte0 = (byte)100;
Type short: 5 sequences
  #0: short short0 = (short)-1;
  #1: short short0 = (short)0;
  #2: short short0 = (short)1;
  #3: short short0 = (short)10;
  #4: short short0 = (short)100;
Type int: 5 sequences
  #0: int int0 = (-1);
  #1: int int0 = 0;
  #2: int int0 = 1;
  #3: int int0 = 10;
  #4: int int0 = 100;
Type long: 5 sequences
  #0: long long0 = (-1L);
  #1: long long0 = 0L;
  #2: long long0 = 1L;
  #3: long long0 = 10L;
  #4: long long0 = 100L;
Type float: 5 sequences
  #0: float float0 = (-1.0f);
  #1: float float0 = 0.0f;
  #2: float float0 = 1.0f;
  #3: float float0 = 10.0f;
  #4: float float0 = 100.0f;
Type double: 5 sequences
  #0: double double0 = (-1.0d);
  #1: double double0 = 0.0d;
  #2: double double0 = 1.0d;
  #3: double double0 = 10.0d;
  #4: double double0 = 100.0d;
Type char: 4 sequences
  #0: char char0 = '#';
  #1: char char0 = ' ';
  #2: char char0 = '4';
  #3: char char0 = 'a';
Type boolean: 2 sequences
  #0: boolean boolean0 = true;
  #1: boolean boolean0 = false;
Type java.lang.String: 2 sequences
  #0: java.lang.String str0 = "";
  #1: java.lang.String str0 = "hi!";
-------------------------------------------
Memory used: 12.7M
randoop.util.Randomness called by nextRandomInt: 1 calls to Random so far
Selected operation: org.apache.commons.cli.AlreadySelectedException.<init> : (org.apache.commons.cli.OptionGroup, org.apache.commons.cli.Option) -> org.apache.commons.cli.AlreadySelectedException
selectInputs:  inputTypes=(org.apache.commons.cli.OptionGroup, org.apache.commons.cli.Option)
randoop.util.Randomness called by weightedCoinFlip: 2 calls to Random so far
Will query component set for objects of type org.apache.commons.cli.OptionGroup
getSequencesForType(org.apache.commons.cli.OptionGroup, false, false)
getSequencesForType: found no sequences matching type org.apache.commons.cli.OptionGroup
getSequencesForType(org.apache.commons.cli.OptionGroup) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 0-th input
randoop.util.Randomness called by weightedCoinFlip: 3 calls to Random so far
Will query component set for objects of type org.apache.commons.cli.Option
getSequencesForType(org.apache.commons.cli.Option, false, false)
getSequencesForType: found no sequences matching type org.apache.commons.cli.Option
getSequencesForType(org.apache.commons.cli.Option) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 1-th input
Successfully created new unique sequence:
org.apache.commons.cli.OptionGroup optionGroup0 = null;
org.apache.commons.cli.Option option1 = null;
org.apache.commons.cli.AlreadySelectedException alreadySelectedException2 = new org.apache.commons.cli.AlreadySelectedException(optionGroup0, option1);

Excluding from extension pool due to exception or failure in statement 2
  Statement: org.apache.commons.cli.AlreadySelectedException alreadySelectedException2 = new org.apache.commons.cli.AlreadySelectedException(optionGroup0, option1);
  Result: [ExceptionalExecution, java.lang.NullPointerException, at org.apache.commons.cli.AlreadySelectedException.<init>(AlreadySelectedException.java:56)]
-------------------------------------------
Memory used: 20.3M
randoop.util.Randomness called by nextRandomInt: 4 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLine.iterator : (org.apache.commons.cli.CommandLine) -> java.util.Iterator
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLine)
Will query component set for objects of type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.CommandLine.iterator : (org.apache.commons.cli.CommandLine) -> java.util.Iterator
-------------------------------------------
Memory used: 20.3M
randoop.util.Randomness called by nextRandomInt: 5 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLine.getParsedOptionValue : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.Object
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLine, java.lang.String)
Will query component set for objects of type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.CommandLine.getParsedOptionValue : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.Object
-------------------------------------------
Memory used: 20.3M
randoop.util.Randomness called by nextRandomInt: 6 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLine.getOptionValues : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.String[]
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLine, java.lang.String)
Will query component set for objects of type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.CommandLine.getOptionValues : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.String[]
-------------------------------------------
Memory used: 20.3M
randoop.util.Randomness called by nextRandomInt: 7 calls to Random so far
Selected operation: java.lang.Object.<init> : () -> java.lang.Object
selectInputs:  inputTypes=()
Successfully created new unique sequence:
java.lang.Object obj0 = new java.lang.Object();

isSideEffectFree => false for Statement [ java.lang.Object.<init> : () -> java.lang.Object]
Making index 0 active.
Adding sequence #1 of type java.lang.Object of length 1
-------------------------------------------
Memory used: 21.4M
randoop.util.Randomness called by nextRandomInt: 8 calls to Random so far
Selected operation: java.lang.Throwable.getSuppressed : (java.lang.Throwable) -> java.lang.Throwable[]
selectInputs:  inputTypes=(java.lang.Throwable)
Will query component set for objects of type java.lang.Throwable
getSequencesForType(java.lang.Throwable, false, true)
getSequencesForType: found no sequences matching type java.lang.Throwable
getSequencesForType(java.lang.Throwable) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: java.lang.Throwable.getSuppressed : (java.lang.Throwable) -> java.lang.Throwable[]
-------------------------------------------
Memory used: 21.4M
randoop.util.Randomness called by nextRandomInt: 9 calls to Random so far
Selected operation: org.apache.commons.cli.AlreadySelectedException.<init> : (org.apache.commons.cli.OptionGroup, org.apache.commons.cli.Option) -> org.apache.commons.cli.AlreadySelectedException
selectInputs:  inputTypes=(org.apache.commons.cli.OptionGroup, org.apache.commons.cli.Option)
randoop.util.Randomness called by weightedCoinFlip: 10 calls to Random so far
Will query component set for objects of type org.apache.commons.cli.OptionGroup
getSequencesForType(org.apache.commons.cli.OptionGroup, false, false)
getSequencesForType: found no sequences matching type org.apache.commons.cli.OptionGroup
getSequencesForType(org.apache.commons.cli.OptionGroup) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 0-th input
randoop.util.Randomness called by weightedCoinFlip: 11 calls to Random so far
Will query component set for objects of type org.apache.commons.cli.Option
getSequencesForType(org.apache.commons.cli.Option, false, false)
getSequencesForType: found no sequences matching type org.apache.commons.cli.Option
getSequencesForType(org.apache.commons.cli.Option) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 1-th input
Sequence discarded: the same sequence was previously created.
-------------------------------------------
Memory used: 21.4M
randoop.util.Randomness called by nextRandomInt: 12 calls to Random so far
Selected operation: org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], boolean) -> org.apache.commons.cli.CommandLine
selectInputs:  inputTypes=(org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], boolean)
Will query component set for objects of type org.apache.commons.cli.Parser
getSequencesForType(org.apache.commons.cli.Parser, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.Parser
getSequencesForType(org.apache.commons.cli.Parser) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], boolean) -> org.apache.commons.cli.CommandLine
-------------------------------------------
Memory used: 21.4M
randoop.util.Randomness called by nextRandomInt: 13 calls to Random so far
Selected operation: org.apache.commons.cli.AlreadySelectedException.<init> : (java.lang.String) -> org.apache.commons.cli.AlreadySelectedException
selectInputs:  inputTypes=(java.lang.String)
randoop.util.Randomness called by weightedCoinFlip: 14 calls to Random so far
Will query component set for objects of type java.lang.String
getSequencesForType(java.lang.String, false, false)
candidate compatibleType (isNonreceiverType=true): java.lang.String
  Adding 2 methods.
getSequencesForType(java.lang.String) => 2 sequences.
number of candidate components: 2
randoop.util.Randomness called by nextRandomInt: 15 calls to Random so far
chosenSeq: java.lang.String str0 = "";

Successfully created new unique sequence:
org.apache.commons.cli.AlreadySelectedException alreadySelectedException1 = new org.apache.commons.cli.AlreadySelectedException("");

isSideEffectFree => false for Statement [  : () -> java.lang.String]
Making index 0 inactive (value is a primitive)
isSideEffectFree => false for Statement [ org.apache.commons.cli.AlreadySelectedException.<init> : (java.lang.String) -> org.apache.commons.cli.AlreadySelectedException]
Making index 1 active.
Adding sequence #1 of type org.apache.commons.cli.AlreadySelectedException of length 2
-------------------------------------------
Memory used: 30.8M
randoop.util.Randomness called by nextRandomInt: 16 calls to Random so far
Selected operation: org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[]) -> org.apache.commons.cli.CommandLine
selectInputs:  inputTypes=(org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[])
Will query component set for objects of type org.apache.commons.cli.Parser
getSequencesForType(org.apache.commons.cli.Parser, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.Parser
getSequencesForType(org.apache.commons.cli.Parser) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[]) -> org.apache.commons.cli.CommandLine
-------------------------------------------
Memory used: 30.8M
randoop.util.Randomness called by nextRandomInt: 17 calls to Random so far
Selected operation: java.lang.Object.getClass : (java.lang.Object) -> java.lang.Class<?>
Applying capture conversion to java.lang.Object.getClass : (java.lang.Object) -> java.lang.Class<?>
selectInputs:  inputTypes=(java.lang.Object)
Will query component set for objects of type java.lang.Object
getSequencesForType(java.lang.Object, false, true)
candidate compatibleType (isNonreceiverType=true): byte
candidate compatibleType (isNonreceiverType=true): short
candidate compatibleType (isNonreceiverType=true): int
candidate compatibleType (isNonreceiverType=true): long
candidate compatibleType (isNonreceiverType=true): float
candidate compatibleType (isNonreceiverType=true): double
candidate compatibleType (isNonreceiverType=true): char
candidate compatibleType (isNonreceiverType=true): boolean
candidate compatibleType (isNonreceiverType=true): java.lang.String
candidate compatibleType (isNonreceiverType=false): java.lang.Object
  Adding 1 methods.
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.AlreadySelectedException
  Adding 1 methods.
getSequencesForType(java.lang.Object) => 2 sequences.
number of candidate components: 2
randoop.util.Randomness called by nextRandomInt: 18 calls to Random so far
chosenSeq: java.lang.Object obj0 = new java.lang.Object();

Successfully created new unique sequence:
java.lang.Object obj0 = new java.lang.Object();
java.lang.Class<?> wildcardClass1 = (java.lang.Class<?>) getClass.invoke(obj0);

MethodCall.execute: this = public final native java.lang.Class java.lang.Object.getClass()
runReflectionCodeRaw: public final native java.lang.Class java.lang.Object.getClass()
runReflectionCodeRaw(public final native java.lang.Class java.lang.Object.getClass()) =>  failed to run
isSideEffectFree => false for Statement [ java.lang.Object.<init> : () -> java.lang.Object]
Making index 0 active.
isSideEffectFree => true for Statement [ java.lang.Object.getClass : (java.lang.Object) -> java.lang.Class<?>]
Making index 1 active.
Adding sequence #1 of type java.lang.Class<?> of length 2
-------------------------------------------
Memory used: 41.3M
randoop.util.Randomness called by nextRandomInt: 19 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLine.getOptions : (org.apache.commons.cli.CommandLine) -> org.apache.commons.cli.Option[]
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLine)
Will query component set for objects of type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.CommandLine.getOptions : (org.apache.commons.cli.CommandLine) -> org.apache.commons.cli.Option[]
-------------------------------------------
Memory used: 41.3M
randoop.util.Randomness called by nextRandomInt: 20 calls to Random so far
Selected operation: org.apache.commons.cli.BasicParser.<init> : () -> org.apache.commons.cli.BasicParser
selectInputs:  inputTypes=()
Successfully created new unique sequence:
org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();

isSideEffectFree => false for Statement [ org.apache.commons.cli.BasicParser.<init> : () -> org.apache.commons.cli.BasicParser]
Making index 0 active.
Adding sequence #1 of type org.apache.commons.cli.BasicParser of length 1
-------------------------------------------
Memory used: 52.1M
randoop.util.Randomness called by nextRandomInt: 21 calls to Random so far
Selected operation: org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[]) -> org.apache.commons.cli.CommandLine
selectInputs:  inputTypes=(org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[])
Will query component set for objects of type org.apache.commons.cli.Parser
getSequencesForType(org.apache.commons.cli.Parser, false, true)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.BasicParser
  Adding 1 methods.
getSequencesForType(org.apache.commons.cli.Parser) => 1 sequences.
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 22 calls to Random so far
chosenSeq: org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();

randoop.util.Randomness called by weightedCoinFlip: 23 calls to Random so far
Will query component set for objects of type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options, false, false)
getSequencesForType: found no sequences matching type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 1-th input
randoop.util.Randomness called by weightedCoinFlip: 24 calls to Random so far
Array creation heuristic: will create helper array of type java.lang.String[]
getSequencesForType(java.lang.String[], false, false)
getSequencesForType: found no sequences matching type java.lang.String[]
getSequencesForType(java.lang.String[]) => 0 sequences.
getSequencesForType(java.lang.String, false, false)
candidate compatibleType (isNonreceiverType=true): java.lang.String
  Adding 2 methods.
getSequencesForType(java.lang.String) => 2 sequences.
randoop.util.Randomness called by nextRandomInt: 25 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 26 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 27 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 28 calls to Random so far
Array creation heuristic: 1 candidates
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 29 calls to Random so far
chosenSeq: java.lang.String[] strArray3 = new java.lang.String[] { "", "", "hi!" };

Successfully created new unique sequence:
org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();
org.apache.commons.cli.Options options1 = null;
java.lang.String[] strArray5 = new java.lang.String[] { "", "", "hi!" };
org.apache.commons.cli.CommandLine commandLine6 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray.invoke((org.apache.commons.cli.Parser) basicParser0, options1, strArray5);

MethodCall.execute: this = public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
  Param 0 = null
  Param 1 = [ [class java.lang.String],  [class java.lang.String], hi! [class java.lang.String]] [class [Ljava.lang.String;]
runReflectionCodeRaw: public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
Excluding from extension pool due to exception or failure in statement 6
  Statement: org.apache.commons.cli.CommandLine commandLine6 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray.invoke((org.apache.commons.cli.Parser) basicParser0, options1, strArray5);
  Result: [ExceptionalExecution, java.lang.NullPointerException, at org.apache.commons.cli.Parser.parse(Parser.java:143)]
-------------------------------------------
Memory used: 63.3M
randoop.util.Randomness called by nextRandomInt: 30 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLine.addOption : (org.apache.commons.cli.CommandLine, org.apache.commons.cli.Option) -> void
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLine, org.apache.commons.cli.Option)
Will query component set for objects of type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.CommandLine.addOption : (org.apache.commons.cli.CommandLine, org.apache.commons.cli.Option) -> void
-------------------------------------------
Memory used: 63.3M
randoop.util.Randomness called by nextRandomInt: 31 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLineParser.parse : (org.apache.commons.cli.CommandLineParser, org.apache.commons.cli.Options, java.lang.String[]) -> org.apache.commons.cli.CommandLine
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLineParser, org.apache.commons.cli.Options, java.lang.String[])
Will query component set for objects of type org.apache.commons.cli.CommandLineParser
getSequencesForType(org.apache.commons.cli.CommandLineParser, false, true)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.BasicParser
  Adding 1 methods.
getSequencesForType(org.apache.commons.cli.CommandLineParser) => 1 sequences.
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 32 calls to Random so far
chosenSeq: org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();

randoop.util.Randomness called by weightedCoinFlip: 33 calls to Random so far
Using null as input.
randoop.util.Randomness called by weightedCoinFlip: 34 calls to Random so far
Array creation heuristic: will create helper array of type java.lang.String[]
getSequencesForType(java.lang.String[], false, false)
getSequencesForType: found no sequences matching type java.lang.String[]
getSequencesForType(java.lang.String[]) => 0 sequences.
getSequencesForType(java.lang.String, false, false)
candidate compatibleType (isNonreceiverType=true): java.lang.String
  Adding 2 methods.
getSequencesForType(java.lang.String) => 2 sequences.
randoop.util.Randomness called by nextRandomInt: 35 calls to Random so far
Array creation heuristic: 1 candidates
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 36 calls to Random so far
chosenSeq: java.lang.String[] strArray0 = new java.lang.String[] {  };

Successfully created new unique sequence:
org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();
org.apache.commons.cli.Options options1 = null;
java.lang.String[] strArray2 = new java.lang.String[] {  };
org.apache.commons.cli.CommandLine commandLine3 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray.invoke((org.apache.commons.cli.CommandLineParser) basicParser0, options1, strArray2);

MethodCall.execute: this = public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
  Param 0 = null
  Param 1 = [] [class [Ljava.lang.String;]
runReflectionCodeRaw: public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
Excluding from extension pool due to exception or failure in statement 3
  Statement: org.apache.commons.cli.CommandLine commandLine3 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray.invoke((org.apache.commons.cli.CommandLineParser) basicParser0, options1, strArray2);
  Result: [ExceptionalExecution, java.lang.NullPointerException, at org.apache.commons.cli.Parser.parse(Parser.java:143)]
-------------------------------------------
Memory used: 25.2M
randoop.util.Randomness called by nextRandomInt: 37 calls to Random so far
Selected operation: java.lang.Throwable.addSuppressed : (java.lang.Throwable, java.lang.Throwable) -> void
selectInputs:  inputTypes=(java.lang.Throwable, java.lang.Throwable)
Will query component set for objects of type java.lang.Throwable
getSequencesForType(java.lang.Throwable, false, true)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.AlreadySelectedException
  Adding 1 methods.
getSequencesForType(java.lang.Throwable) => 1 sequences.
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 38 calls to Random so far
chosenSeq: org.apache.commons.cli.AlreadySelectedException alreadySelectedException1 = new org.apache.commons.cli.AlreadySelectedException("");

randoop.util.Randomness called by weightedCoinFlip: 39 calls to Random so far
Will query component set for objects of type java.lang.Throwable
getSequencesForType(java.lang.Throwable, false, false)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.AlreadySelectedException
  Adding 1 methods.
getSequencesForType(java.lang.Throwable) => 1 sequences.
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 40 calls to Random so far
chosenSeq: org.apache.commons.cli.AlreadySelectedException alreadySelectedException1 = new org.apache.commons.cli.AlreadySelectedException("");

Successfully created new unique sequence:
org.apache.commons.cli.AlreadySelectedException alreadySelectedException1 = new org.apache.commons.cli.AlreadySelectedException("");
org.apache.commons.cli.AlreadySelectedException alreadySelectedException3 = new org.apache.commons.cli.AlreadySelectedException("");
addSuppressed_Throwable.invoke((java.lang.Throwable) alreadySelectedException1, (java.lang.Throwable) alreadySelectedException3);

MethodCall.execute: this = public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
  Param 0 = org.apache.commons.cli.AlreadySelectedException:  [class org.apache.commons.cli.AlreadySelectedException]
runReflectionCodeRaw: public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
runReflectionCodeRaw(public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)) =>  failed to run
isSideEffectFree => false for Statement [  : () -> java.lang.String]
Making index 0 inactive (value is a primitive)
isSideEffectFree => false for Statement [ org.apache.commons.cli.AlreadySelectedException.<init> : (java.lang.String) -> org.apache.commons.cli.AlreadySelectedException]
Making index 1 active.
isSideEffectFree => false for Statement [  : () -> java.lang.String]
Making index 2 inactive (value is a primitive)
isSideEffectFree => false for Statement [ org.apache.commons.cli.AlreadySelectedException.<init> : (java.lang.String) -> org.apache.commons.cli.AlreadySelectedException]
Making index 3 active.
Making index 4 inactive (value is null)
Adding sequence #2 of type org.apache.commons.cli.AlreadySelectedException of length 5
Adding sequence #3 of type org.apache.commons.cli.AlreadySelectedException of length 5
-------------------------------------------
Memory used: 36.7M
randoop.util.Randomness called by nextRandomInt: 41 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLine.getOptionObject : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.Object
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLine, java.lang.String)
Will query component set for objects of type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.CommandLine.getOptionObject : (org.apache.commons.cli.CommandLine, java.lang.String) -> java.lang.Object
-------------------------------------------
Memory used: 36.7M
randoop.util.Randomness called by nextRandomInt: 42 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLine.resolveOption : (org.apache.commons.cli.CommandLine, java.lang.String) -> org.apache.commons.cli.Option
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLine, java.lang.String)
Will query component set for objects of type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.CommandLine.resolveOption : (org.apache.commons.cli.CommandLine, java.lang.String) -> org.apache.commons.cli.Option
-------------------------------------------
Memory used: 36.7M
randoop.util.Randomness called by nextRandomInt: 43 calls to Random so far
Selected operation: org.apache.commons.cli.AlreadySelectedException.getOption : (org.apache.commons.cli.AlreadySelectedException) -> org.apache.commons.cli.Option
selectInputs:  inputTypes=(org.apache.commons.cli.AlreadySelectedException)
Will query component set for objects of type org.apache.commons.cli.AlreadySelectedException
getSequencesForType(org.apache.commons.cli.AlreadySelectedException, false, true)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.AlreadySelectedException
  Adding 3 methods.
getSequencesForType(org.apache.commons.cli.AlreadySelectedException) => 3 sequences.
number of candidate components: 3
randoop.util.Randomness called by nextRandomInt: 44 calls to Random so far
chosenSeq: org.apache.commons.cli.AlreadySelectedException alreadySelectedException1 = new org.apache.commons.cli.AlreadySelectedException("");

Successfully created new unique sequence:
org.apache.commons.cli.AlreadySelectedException alreadySelectedException1 = new org.apache.commons.cli.AlreadySelectedException("");
org.apache.commons.cli.Option option2 = (org.apache.commons.cli.Option) getOption.invoke(alreadySelectedException1);

MethodCall.execute: this = public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption()
runReflectionCodeRaw: public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption()
runReflectionCodeRaw(public org.apache.commons.cli.Option org.apache.commons.cli.AlreadySelectedException.getOption()) =>  failed to run
isSideEffectFree => false for Statement [  : () -> java.lang.String]
Making index 0 inactive (value is a primitive)
isSideEffectFree => false for Statement [ org.apache.commons.cli.AlreadySelectedException.<init> : (java.lang.String) -> org.apache.commons.cli.AlreadySelectedException]
Making index 1 active.
Making index 2 inactive (value is null)
Adding sequence #4 of type org.apache.commons.cli.AlreadySelectedException of length 3
-------------------------------------------
Memory used: 47.2M
randoop.util.Randomness called by nextRandomInt: 45 calls to Random so far
Selected operation: org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], java.util.Properties) -> org.apache.commons.cli.CommandLine
selectInputs:  inputTypes=(org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], java.util.Properties)
Will query component set for objects of type org.apache.commons.cli.Parser
getSequencesForType(org.apache.commons.cli.Parser, false, true)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.BasicParser
  Adding 1 methods.
getSequencesForType(org.apache.commons.cli.Parser) => 1 sequences.
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 46 calls to Random so far
chosenSeq: org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();

randoop.util.Randomness called by weightedCoinFlip: 47 calls to Random so far
Will query component set for objects of type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options, false, false)
getSequencesForType: found no sequences matching type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 1-th input
randoop.util.Randomness called by weightedCoinFlip: 48 calls to Random so far
Array creation heuristic: will create helper array of type java.lang.String[]
getSequencesForType(java.lang.String[], false, false)
getSequencesForType: found no sequences matching type java.lang.String[]
getSequencesForType(java.lang.String[]) => 0 sequences.
getSequencesForType(java.lang.String, false, false)
candidate compatibleType (isNonreceiverType=true): java.lang.String
  Adding 2 methods.
getSequencesForType(java.lang.String) => 2 sequences.
randoop.util.Randomness called by nextRandomInt: 49 calls to Random so far
Array creation heuristic: 1 candidates
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 50 calls to Random so far
chosenSeq: java.lang.String[] strArray0 = new java.lang.String[] {  };

randoop.util.Randomness called by weightedCoinFlip: 51 calls to Random so far
Will query component set for objects of type java.util.Properties
getSequencesForType(java.util.Properties, false, false)
getSequencesForType: found no sequences matching type java.util.Properties
getSequencesForType(java.util.Properties) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 3-th input
Successfully created new unique sequence:
org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();
org.apache.commons.cli.Options options1 = null;
java.lang.String[] strArray2 = new java.lang.String[] {  };
java.util.Properties properties3 = null;
org.apache.commons.cli.CommandLine commandLine4 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray_Properties.invoke((org.apache.commons.cli.Parser) basicParser0, options1, strArray2, properties3);

MethodCall.execute: this = public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
  Param 0 = null
  Param 1 = [] [class [Ljava.lang.String;]
  Param 2 = null
runReflectionCodeRaw: public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
Excluding from extension pool due to exception or failure in statement 4
  Statement: org.apache.commons.cli.CommandLine commandLine4 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray_Properties.invoke((org.apache.commons.cli.Parser) basicParser0, options1, strArray2, properties3);
  Result: [ExceptionalExecution, java.lang.NullPointerException, at org.apache.commons.cli.Parser.parse(Parser.java:143)]
-------------------------------------------
Memory used: 58.7M
randoop.util.Randomness called by nextRandomInt: 52 calls to Random so far
Selected operation: org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], java.util.Properties, boolean) -> org.apache.commons.cli.CommandLine
selectInputs:  inputTypes=(org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], java.util.Properties, boolean)
Will query component set for objects of type org.apache.commons.cli.Parser
getSequencesForType(org.apache.commons.cli.Parser, false, true)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.BasicParser
  Adding 1 methods.
getSequencesForType(org.apache.commons.cli.Parser) => 1 sequences.
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 53 calls to Random so far
chosenSeq: org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();

randoop.util.Randomness called by weightedCoinFlip: 54 calls to Random so far
Will query component set for objects of type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options, false, false)
getSequencesForType: found no sequences matching type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 1-th input
randoop.util.Randomness called by weightedCoinFlip: 55 calls to Random so far
Array creation heuristic: will create helper array of type java.lang.String[]
getSequencesForType(java.lang.String[], false, false)
getSequencesForType: found no sequences matching type java.lang.String[]
getSequencesForType(java.lang.String[]) => 0 sequences.
getSequencesForType(java.lang.String, false, false)
candidate compatibleType (isNonreceiverType=true): java.lang.String
  Adding 2 methods.
getSequencesForType(java.lang.String) => 2 sequences.
randoop.util.Randomness called by nextRandomInt: 56 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 57 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 58 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 59 calls to Random so far
Array creation heuristic: 1 candidates
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 60 calls to Random so far
chosenSeq: java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "", "hi!" };

randoop.util.Randomness called by weightedCoinFlip: 61 calls to Random so far
Will query component set for objects of type java.util.Properties
getSequencesForType(java.util.Properties, false, false)
getSequencesForType: found no sequences matching type java.util.Properties
getSequencesForType(java.util.Properties) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 3-th input
randoop.util.Randomness called by weightedCoinFlip: 62 calls to Random so far
Will query component set for objects of type boolean
getSequencesForType(boolean, false, false)
candidate compatibleType (isNonreceiverType=true): boolean
  Adding 2 methods.
getSequencesForType(boolean) => 2 sequences.
number of candidate components: 2
randoop.util.Randomness called by nextRandomInt: 63 calls to Random so far
chosenSeq: boolean boolean0 = false;

Successfully created new unique sequence:
org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();
org.apache.commons.cli.Options options1 = null;
java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "", "hi!" };
java.util.Properties properties6 = null;
org.apache.commons.cli.CommandLine commandLine8 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray_Properties_boolean.invoke((org.apache.commons.cli.Parser) basicParser0, options1, strArray5, properties6, false);

MethodCall.execute: this = public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException
  Param 0 = null
  Param 1 = [hi! [class java.lang.String],  [class java.lang.String], hi! [class java.lang.String]] [class [Ljava.lang.String;]
  Param 2 = null
  Param 3 = false [class java.lang.Boolean]
runReflectionCodeRaw: public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties,boolean) throws org.apache.commons.cli.ParseException
Excluding from extension pool due to exception or failure in statement 8
  Statement: org.apache.commons.cli.CommandLine commandLine8 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray_Properties_boolean.invoke((org.apache.commons.cli.Parser) basicParser0, options1, strArray5, properties6, false);
  Result: [ExceptionalExecution, java.lang.NullPointerException, at org.apache.commons.cli.Parser.parse(Parser.java:143)]
-------------------------------------------
Memory used: 71.3M
randoop.util.Randomness called by nextRandomInt: 64 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLine.getArgs : (org.apache.commons.cli.CommandLine) -> java.lang.String[]
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLine)
Will query component set for objects of type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.CommandLine.getArgs : (org.apache.commons.cli.CommandLine) -> java.lang.String[]
-------------------------------------------
Memory used: 71.3M
randoop.util.Randomness called by nextRandomInt: 65 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLine.getOptionObject : (org.apache.commons.cli.CommandLine, char) -> java.lang.Object
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLine, char)
Will query component set for objects of type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.CommandLine.getOptionObject : (org.apache.commons.cli.CommandLine, char) -> java.lang.Object
-------------------------------------------
Memory used: 71.3M
randoop.util.Randomness called by nextRandomInt: 66 calls to Random so far
Selected operation: java.lang.Throwable.getSuppressed : (java.lang.Throwable) -> java.lang.Throwable[]
selectInputs:  inputTypes=(java.lang.Throwable)
Will query component set for objects of type java.lang.Throwable
getSequencesForType(java.lang.Throwable, false, true)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.AlreadySelectedException
  Adding 4 methods.
getSequencesForType(java.lang.Throwable) => 4 sequences.
number of candidate components: 4
randoop.util.Randomness called by nextRandomInt: 67 calls to Random so far
chosenSeq: org.apache.commons.cli.AlreadySelectedException alreadySelectedException1 = new org.apache.commons.cli.AlreadySelectedException("");
org.apache.commons.cli.AlreadySelectedException alreadySelectedException3 = new org.apache.commons.cli.AlreadySelectedException("");
addSuppressed_Throwable.invoke((java.lang.Throwable) alreadySelectedException1, (java.lang.Throwable) alreadySelectedException3);

randoop.util.Randomness called by nextRandomInt: 68 calls to Random so far
Successfully created new unique sequence:
org.apache.commons.cli.AlreadySelectedException alreadySelectedException1 = new org.apache.commons.cli.AlreadySelectedException("");
org.apache.commons.cli.AlreadySelectedException alreadySelectedException3 = new org.apache.commons.cli.AlreadySelectedException("");
addSuppressed_Throwable.invoke((java.lang.Throwable) alreadySelectedException1, (java.lang.Throwable) alreadySelectedException3);
java.lang.Throwable[] throwableArray5 = (java.lang.Throwable[]) getSuppressed.invoke((java.lang.Throwable) alreadySelectedException3);

MethodCall.execute: this = public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
  Param 0 = org.apache.commons.cli.AlreadySelectedException:  [class org.apache.commons.cli.AlreadySelectedException]
runReflectionCodeRaw: public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
runReflectionCodeRaw(public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)) =>  failed to run
MethodCall.execute: this = public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()
runReflectionCodeRaw: public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()
runReflectionCodeRaw(public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()) =>  failed to run
isSideEffectFree => false for Statement [  : () -> java.lang.String]
Making index 0 inactive (value is a primitive)
isSideEffectFree => false for Statement [ org.apache.commons.cli.AlreadySelectedException.<init> : (java.lang.String) -> org.apache.commons.cli.AlreadySelectedException]
Making index 1 active.
isSideEffectFree => false for Statement [  : () -> java.lang.String]
Making index 2 inactive (value is a primitive)
isSideEffectFree => false for Statement [ org.apache.commons.cli.AlreadySelectedException.<init> : (java.lang.String) -> org.apache.commons.cli.AlreadySelectedException]
Making index 3 active.
Making index 4 inactive (value is null)
isSideEffectFree => false for Statement [ java.lang.Throwable.getSuppressed : (java.lang.Throwable) -> java.lang.Throwable[]]
Making index 5 active.
Adding sequence #1 of type java.lang.Throwable[] of length 6
Adding sequence #5 of type org.apache.commons.cli.AlreadySelectedException of length 6
-------------------------------------------
Memory used: 83.9M
randoop.util.Randomness called by nextRandomInt: 69 calls to Random so far
Selected operation: org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], java.util.Properties) -> org.apache.commons.cli.CommandLine
selectInputs:  inputTypes=(org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], java.util.Properties)
Will query component set for objects of type org.apache.commons.cli.Parser
getSequencesForType(org.apache.commons.cli.Parser, false, true)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.BasicParser
  Adding 1 methods.
getSequencesForType(org.apache.commons.cli.Parser) => 1 sequences.
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 70 calls to Random so far
chosenSeq: org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();

randoop.util.Randomness called by weightedCoinFlip: 71 calls to Random so far
Will query component set for objects of type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options, false, false)
getSequencesForType: found no sequences matching type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 1-th input
randoop.util.Randomness called by weightedCoinFlip: 72 calls to Random so far
Array creation heuristic: will create helper array of type java.lang.String[]
getSequencesForType(java.lang.String[], false, false)
getSequencesForType: found no sequences matching type java.lang.String[]
getSequencesForType(java.lang.String[]) => 0 sequences.
getSequencesForType(java.lang.String, false, false)
candidate compatibleType (isNonreceiverType=true): java.lang.String
  Adding 2 methods.
getSequencesForType(java.lang.String) => 2 sequences.
randoop.util.Randomness called by nextRandomInt: 73 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 74 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 75 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 76 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 77 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 78 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 79 calls to Random so far
Array creation heuristic: 1 candidates
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 80 calls to Random so far
chosenSeq: java.lang.String[] strArray6 = new java.lang.String[] { "", "", "hi!", "", "hi!", "hi!" };

randoop.util.Randomness called by weightedCoinFlip: 81 calls to Random so far
Will query component set for objects of type java.util.Properties
getSequencesForType(java.util.Properties, false, false)
getSequencesForType: found no sequences matching type java.util.Properties
getSequencesForType(java.util.Properties) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 3-th input
Successfully created new unique sequence:
org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();
org.apache.commons.cli.Options options1 = null;
java.lang.String[] strArray8 = new java.lang.String[] { "", "", "hi!", "", "hi!", "hi!" };
java.util.Properties properties9 = null;
org.apache.commons.cli.CommandLine commandLine10 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray_Properties.invoke((org.apache.commons.cli.Parser) basicParser0, options1, strArray8, properties9);

MethodCall.execute: this = public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
  Param 0 = null
  Param 1 = [ [class java.lang.String],  [class java.lang.String], hi! [class java.lang.String],  [class java.lang.String], hi! [class java.lang.String], hi! [class java.lang.String]] [class [Ljava.lang.String;]
  Param 2 = null
runReflectionCodeRaw: public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
Excluding from extension pool due to exception or failure in statement 10
  Statement: org.apache.commons.cli.CommandLine commandLine10 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray_Properties.invoke((org.apache.commons.cli.Parser) basicParser0, options1, strArray8, properties9);
  Result: [ExceptionalExecution, java.lang.NullPointerException, at org.apache.commons.cli.Parser.parse(Parser.java:143)]
-------------------------------------------
Memory used: 96.5M
randoop.util.Randomness called by nextRandomInt: 82 calls to Random so far
Selected operation: org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[]) -> org.apache.commons.cli.CommandLine
selectInputs:  inputTypes=(org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[])
Will query component set for objects of type org.apache.commons.cli.Parser
getSequencesForType(org.apache.commons.cli.Parser, false, true)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.BasicParser
  Adding 1 methods.
getSequencesForType(org.apache.commons.cli.Parser) => 1 sequences.
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 83 calls to Random so far
chosenSeq: org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();

randoop.util.Randomness called by weightedCoinFlip: 84 calls to Random so far
Will query component set for objects of type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options, false, false)
getSequencesForType: found no sequences matching type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 1-th input
randoop.util.Randomness called by weightedCoinFlip: 85 calls to Random so far
Array creation heuristic: will create helper array of type java.lang.String[]
getSequencesForType(java.lang.String[], false, false)
getSequencesForType: found no sequences matching type java.lang.String[]
getSequencesForType(java.lang.String[]) => 0 sequences.
getSequencesForType(java.lang.String, false, false)
candidate compatibleType (isNonreceiverType=true): java.lang.String
  Adding 2 methods.
getSequencesForType(java.lang.String) => 2 sequences.
randoop.util.Randomness called by nextRandomInt: 86 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 87 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 88 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 89 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 90 calls to Random so far
Array creation heuristic: 1 candidates
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 91 calls to Random so far
chosenSeq: java.lang.String[] strArray4 = new java.lang.String[] { "", "hi!", "hi!", "" };

Successfully created new unique sequence:
org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();
org.apache.commons.cli.Options options1 = null;
java.lang.String[] strArray6 = new java.lang.String[] { "", "hi!", "hi!", "" };
org.apache.commons.cli.CommandLine commandLine7 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray.invoke((org.apache.commons.cli.Parser) basicParser0, options1, strArray6);

MethodCall.execute: this = public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
  Param 0 = null
  Param 1 = [ [class java.lang.String], hi! [class java.lang.String], hi! [class java.lang.String],  [class java.lang.String]] [class [Ljava.lang.String;]
runReflectionCodeRaw: public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
Excluding from extension pool due to exception or failure in statement 7
  Statement: org.apache.commons.cli.CommandLine commandLine7 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray.invoke((org.apache.commons.cli.Parser) basicParser0, options1, strArray6);
  Result: [ExceptionalExecution, java.lang.NullPointerException, at org.apache.commons.cli.Parser.parse(Parser.java:143)]
-------------------------------------------
Memory used: 108M
randoop.util.Randomness called by nextRandomInt: 92 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLine.iterator : (org.apache.commons.cli.CommandLine) -> java.util.Iterator
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLine)
Will query component set for objects of type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.CommandLine.iterator : (org.apache.commons.cli.CommandLine) -> java.util.Iterator
-------------------------------------------
Memory used: 108M
randoop.util.Randomness called by nextRandomInt: 93 calls to Random so far
Selected operation: java.lang.Throwable.getSuppressed : (java.lang.Throwable) -> java.lang.Throwable[]
selectInputs:  inputTypes=(java.lang.Throwable)
Will query component set for objects of type java.lang.Throwable
getSequencesForType(java.lang.Throwable, false, true)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.AlreadySelectedException
  Adding 5 methods.
getSequencesForType(java.lang.Throwable) => 5 sequences.
number of candidate components: 5
randoop.util.Randomness called by nextRandomInt: 94 calls to Random so far
chosenSeq: org.apache.commons.cli.AlreadySelectedException alreadySelectedException1 = new org.apache.commons.cli.AlreadySelectedException("");
org.apache.commons.cli.AlreadySelectedException alreadySelectedException3 = new org.apache.commons.cli.AlreadySelectedException("");
addSuppressed_Throwable.invoke((java.lang.Throwable) alreadySelectedException1, (java.lang.Throwable) alreadySelectedException3);

randoop.util.Randomness called by nextRandomInt: 95 calls to Random so far
Sequence discarded: the same sequence was previously created.
-------------------------------------------
Memory used: 108M
randoop.util.Randomness called by nextRandomInt: 96 calls to Random so far
Selected operation: java.lang.Throwable.addSuppressed : (java.lang.Throwable, java.lang.Throwable) -> void
selectInputs:  inputTypes=(java.lang.Throwable, java.lang.Throwable)
Will query component set for objects of type java.lang.Throwable
getSequencesForType(java.lang.Throwable, false, true)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.AlreadySelectedException
  Adding 5 methods.
getSequencesForType(java.lang.Throwable) => 5 sequences.
number of candidate components: 5
randoop.util.Randomness called by nextRandomInt: 97 calls to Random so far
chosenSeq: org.apache.commons.cli.AlreadySelectedException alreadySelectedException1 = new org.apache.commons.cli.AlreadySelectedException("");

randoop.util.Randomness called by weightedCoinFlip: 98 calls to Random so far
Will query component set for objects of type java.lang.Throwable
getSequencesForType(java.lang.Throwable, false, false)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.AlreadySelectedException
  Adding 5 methods.
getSequencesForType(java.lang.Throwable) => 5 sequences.
number of candidate components: 5
randoop.util.Randomness called by nextRandomInt: 99 calls to Random so far
chosenSeq: org.apache.commons.cli.AlreadySelectedException alreadySelectedException1 = new org.apache.commons.cli.AlreadySelectedException("");
org.apache.commons.cli.AlreadySelectedException alreadySelectedException3 = new org.apache.commons.cli.AlreadySelectedException("");
addSuppressed_Throwable.invoke((java.lang.Throwable) alreadySelectedException1, (java.lang.Throwable) alreadySelectedException3);
java.lang.Throwable[] throwableArray5 = (java.lang.Throwable[]) getSuppressed.invoke((java.lang.Throwable) alreadySelectedException3);

Successfully created new unique sequence:
org.apache.commons.cli.AlreadySelectedException alreadySelectedException1 = new org.apache.commons.cli.AlreadySelectedException("");
org.apache.commons.cli.AlreadySelectedException alreadySelectedException3 = new org.apache.commons.cli.AlreadySelectedException("");
org.apache.commons.cli.AlreadySelectedException alreadySelectedException5 = new org.apache.commons.cli.AlreadySelectedException("");
addSuppressed_Throwable.invoke((java.lang.Throwable) alreadySelectedException3, (java.lang.Throwable) alreadySelectedException5);
java.lang.Throwable[] throwableArray7 = (java.lang.Throwable[]) getSuppressed.invoke((java.lang.Throwable) alreadySelectedException5);
addSuppressed_Throwable.invoke((java.lang.Throwable) alreadySelectedException1, (java.lang.Throwable) alreadySelectedException5);

MethodCall.execute: this = public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
  Param 0 = org.apache.commons.cli.AlreadySelectedException:  [class org.apache.commons.cli.AlreadySelectedException]
runReflectionCodeRaw: public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
runReflectionCodeRaw(public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)) =>  failed to run
MethodCall.execute: this = public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()
runReflectionCodeRaw: public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()
runReflectionCodeRaw(public final synchronized java.lang.Throwable[] java.lang.Throwable.getSuppressed()) =>  failed to run
MethodCall.execute: this = public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
  Param 0 = org.apache.commons.cli.AlreadySelectedException:  [class org.apache.commons.cli.AlreadySelectedException]
runReflectionCodeRaw: public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)
runReflectionCodeRaw(public final synchronized void java.lang.Throwable.addSuppressed(java.lang.Throwable)) =>  failed to run
isSideEffectFree => false for Statement [  : () -> java.lang.String]
Making index 0 inactive (value is a primitive)
isSideEffectFree => false for Statement [ org.apache.commons.cli.AlreadySelectedException.<init> : (java.lang.String) -> org.apache.commons.cli.AlreadySelectedException]
Making index 1 active.
isSideEffectFree => false for Statement [  : () -> java.lang.String]
Making index 2 inactive (value is a primitive)
isSideEffectFree => false for Statement [ org.apache.commons.cli.AlreadySelectedException.<init> : (java.lang.String) -> org.apache.commons.cli.AlreadySelectedException]
Making index 3 active.
isSideEffectFree => false for Statement [  : () -> java.lang.String]
Making index 4 inactive (value is a primitive)
isSideEffectFree => false for Statement [ org.apache.commons.cli.AlreadySelectedException.<init> : (java.lang.String) -> org.apache.commons.cli.AlreadySelectedException]
Making index 5 active.
Making index 6 inactive (value is null)
isSideEffectFree => false for Statement [ java.lang.Throwable.getSuppressed : (java.lang.Throwable) -> java.lang.Throwable[]]
Making index 7 active.
Making index 8 inactive (value is null)
Adding sequence #6 of type org.apache.commons.cli.AlreadySelectedException of length 9
Adding sequence #7 of type org.apache.commons.cli.AlreadySelectedException of length 9
-------------------------------------------
Memory used: 121M
randoop.util.Randomness called by nextRandomInt: 100 calls to Random so far
Selected operation: org.apache.commons.cli.AlreadySelectedException.<init> : (org.apache.commons.cli.OptionGroup, org.apache.commons.cli.Option) -> org.apache.commons.cli.AlreadySelectedException
selectInputs:  inputTypes=(org.apache.commons.cli.OptionGroup, org.apache.commons.cli.Option)
randoop.util.Randomness called by weightedCoinFlip: 101 calls to Random so far
Will query component set for objects of type org.apache.commons.cli.OptionGroup
getSequencesForType(org.apache.commons.cli.OptionGroup, false, false)
getSequencesForType: found no sequences matching type org.apache.commons.cli.OptionGroup
getSequencesForType(org.apache.commons.cli.OptionGroup) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 0-th input
randoop.util.Randomness called by weightedCoinFlip: 102 calls to Random so far
Will query component set for objects of type org.apache.commons.cli.Option
getSequencesForType(org.apache.commons.cli.Option, false, false)
getSequencesForType: found no sequences matching type org.apache.commons.cli.Option
getSequencesForType(org.apache.commons.cli.Option) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 1-th input
Sequence discarded: the same sequence was previously created.
-------------------------------------------
Memory used: 121M
randoop.util.Randomness called by nextRandomInt: 103 calls to Random so far
Selected operation: org.apache.commons.cli.Parser.parse : (org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], java.util.Properties) -> org.apache.commons.cli.CommandLine
selectInputs:  inputTypes=(org.apache.commons.cli.Parser, org.apache.commons.cli.Options, java.lang.String[], java.util.Properties)
Will query component set for objects of type org.apache.commons.cli.Parser
getSequencesForType(org.apache.commons.cli.Parser, false, true)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.BasicParser
  Adding 1 methods.
getSequencesForType(org.apache.commons.cli.Parser) => 1 sequences.
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 104 calls to Random so far
chosenSeq: org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();

randoop.util.Randomness called by weightedCoinFlip: 105 calls to Random so far
Will query component set for objects of type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options, false, false)
getSequencesForType: found no sequences matching type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 1-th input
randoop.util.Randomness called by weightedCoinFlip: 106 calls to Random so far
Array creation heuristic: will create helper array of type java.lang.String[]
getSequencesForType(java.lang.String[], false, false)
getSequencesForType: found no sequences matching type java.lang.String[]
getSequencesForType(java.lang.String[]) => 0 sequences.
getSequencesForType(java.lang.String, false, false)
candidate compatibleType (isNonreceiverType=true): java.lang.String
  Adding 2 methods.
getSequencesForType(java.lang.String) => 2 sequences.
randoop.util.Randomness called by nextRandomInt: 107 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 108 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 109 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 110 calls to Random so far
Array creation heuristic: 1 candidates
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 111 calls to Random so far
chosenSeq: java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "hi!", "hi!" };

randoop.util.Randomness called by weightedCoinFlip: 112 calls to Random so far
Using null as input.
Successfully created new unique sequence:
org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();
org.apache.commons.cli.Options options1 = null;
java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "hi!", "hi!" };
java.util.Properties properties6 = null;
org.apache.commons.cli.CommandLine commandLine7 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray_Properties.invoke((org.apache.commons.cli.Parser) basicParser0, options1, strArray5, properties6);

MethodCall.execute: this = public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
  Param 0 = null
  Param 1 = [hi! [class java.lang.String], hi! [class java.lang.String], hi! [class java.lang.String]] [class [Ljava.lang.String;]
  Param 2 = null
runReflectionCodeRaw: public org.apache.commons.cli.CommandLine org.apache.commons.cli.Parser.parse(org.apache.commons.cli.Options,java.lang.String[],java.util.Properties) throws org.apache.commons.cli.ParseException
Excluding from extension pool due to exception or failure in statement 7
  Statement: org.apache.commons.cli.CommandLine commandLine7 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray_Properties.invoke((org.apache.commons.cli.Parser) basicParser0, options1, strArray5, properties6);
  Result: [ExceptionalExecution, java.lang.NullPointerException, at org.apache.commons.cli.Parser.parse(Parser.java:143)]
-------------------------------------------
Memory used: 21.7M
randoop.util.Randomness called by nextRandomInt: 113 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLine.resolveOption : (org.apache.commons.cli.CommandLine, java.lang.String) -> org.apache.commons.cli.Option
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLine, java.lang.String)
Will query component set for objects of type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.CommandLine.resolveOption : (org.apache.commons.cli.CommandLine, java.lang.String) -> org.apache.commons.cli.Option
-------------------------------------------
Memory used: 21.7M
randoop.util.Randomness called by nextRandomInt: 114 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLine.iterator : (org.apache.commons.cli.CommandLine) -> java.util.Iterator
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLine)
Will query component set for objects of type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.CommandLine.iterator : (org.apache.commons.cli.CommandLine) -> java.util.Iterator
-------------------------------------------
Memory used: 21.7M
randoop.util.Randomness called by nextRandomInt: 115 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLine.getArgList : (org.apache.commons.cli.CommandLine) -> java.util.List
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLine)
Will query component set for objects of type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.CommandLine.getArgList : (org.apache.commons.cli.CommandLine) -> java.util.List
-------------------------------------------
Memory used: 21.7M
randoop.util.Randomness called by nextRandomInt: 116 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLineParser.parse : (org.apache.commons.cli.CommandLineParser, org.apache.commons.cli.Options, java.lang.String[]) -> org.apache.commons.cli.CommandLine
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLineParser, org.apache.commons.cli.Options, java.lang.String[])
Will query component set for objects of type org.apache.commons.cli.CommandLineParser
getSequencesForType(org.apache.commons.cli.CommandLineParser, false, true)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.BasicParser
  Adding 1 methods.
getSequencesForType(org.apache.commons.cli.CommandLineParser) => 1 sequences.
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 117 calls to Random so far
chosenSeq: org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();

randoop.util.Randomness called by weightedCoinFlip: 118 calls to Random so far
Will query component set for objects of type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options, false, false)
getSequencesForType: found no sequences matching type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 1-th input
randoop.util.Randomness called by weightedCoinFlip: 119 calls to Random so far
Array creation heuristic: will create helper array of type java.lang.String[]
getSequencesForType(java.lang.String[], false, false)
getSequencesForType: found no sequences matching type java.lang.String[]
getSequencesForType(java.lang.String[]) => 0 sequences.
getSequencesForType(java.lang.String, false, false)
candidate compatibleType (isNonreceiverType=true): java.lang.String
  Adding 2 methods.
getSequencesForType(java.lang.String) => 2 sequences.
randoop.util.Randomness called by nextRandomInt: 120 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 121 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 122 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 123 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 124 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 125 calls to Random so far
Array creation heuristic: 1 candidates
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 126 calls to Random so far
chosenSeq: java.lang.String[] strArray5 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };

Successfully created new unique sequence:
org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();
org.apache.commons.cli.Options options1 = null;
java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "", "hi!", "", "hi!" };
org.apache.commons.cli.CommandLine commandLine8 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray.invoke((org.apache.commons.cli.CommandLineParser) basicParser0, options1, strArray7);

MethodCall.execute: this = public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
  Param 0 = null
  Param 1 = [hi! [class java.lang.String],  [class java.lang.String], hi! [class java.lang.String],  [class java.lang.String], hi! [class java.lang.String]] [class [Ljava.lang.String;]
runReflectionCodeRaw: public abstract org.apache.commons.cli.CommandLine org.apache.commons.cli.CommandLineParser.parse(org.apache.commons.cli.Options,java.lang.String[]) throws org.apache.commons.cli.ParseException
Excluding from extension pool due to exception or failure in statement 8
  Statement: org.apache.commons.cli.CommandLine commandLine8 = (org.apache.commons.cli.CommandLine) parse_Options_StringArray.invoke((org.apache.commons.cli.CommandLineParser) basicParser0, options1, strArray7);
  Result: [ExceptionalExecution, java.lang.NullPointerException, at org.apache.commons.cli.Parser.parse(Parser.java:143)]
-------------------------------------------
Memory used: 34.3M
randoop.util.Randomness called by nextRandomInt: 127 calls to Random so far
Selected operation: org.apache.commons.cli.CommandLine.iterator : (org.apache.commons.cli.CommandLine) -> java.util.Iterator
selectInputs:  inputTypes=(org.apache.commons.cli.CommandLine)
Will query component set for objects of type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine, false, true)
getSequencesForType: found no sequences matching type org.apache.commons.cli.CommandLine
getSequencesForType(org.apache.commons.cli.CommandLine) => 0 sequences.
number of candidate components: 0
No sequences of receiver type.
Failed to find inputs for operation: org.apache.commons.cli.CommandLine.iterator : (org.apache.commons.cli.CommandLine) -> java.util.Iterator
-------------------------------------------
Memory used: 34.3M
randoop.util.Randomness called by nextRandomInt: 128 calls to Random so far
Selected operation: org.apache.commons.cli.BasicParser.flatten : (org.apache.commons.cli.BasicParser, org.apache.commons.cli.Options, java.lang.String[], boolean) -> java.lang.String[]
selectInputs:  inputTypes=(org.apache.commons.cli.BasicParser, org.apache.commons.cli.Options, java.lang.String[], boolean)
Will query component set for objects of type org.apache.commons.cli.BasicParser
getSequencesForType(org.apache.commons.cli.BasicParser, false, true)
candidate compatibleType (isNonreceiverType=false): org.apache.commons.cli.BasicParser
  Adding 1 methods.
getSequencesForType(org.apache.commons.cli.BasicParser) => 1 sequences.
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 129 calls to Random so far
chosenSeq: org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();

randoop.util.Randomness called by weightedCoinFlip: 130 calls to Random so far
Will query component set for objects of type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options, false, false)
getSequencesForType: found no sequences matching type org.apache.commons.cli.Options
getSequencesForType(org.apache.commons.cli.Options) => 0 sequences.
number of candidate components: 0
Found no sequences of required type; will use null as 1-th input
randoop.util.Randomness called by weightedCoinFlip: 131 calls to Random so far
Array creation heuristic: will create helper array of type java.lang.String[]
getSequencesForType(java.lang.String[], false, false)
getSequencesForType: found no sequences matching type java.lang.String[]
getSequencesForType(java.lang.String[]) => 0 sequences.
getSequencesForType(java.lang.String, false, false)
candidate compatibleType (isNonreceiverType=true): java.lang.String
  Adding 2 methods.
getSequencesForType(java.lang.String) => 2 sequences.
randoop.util.Randomness called by nextRandomInt: 132 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 133 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 134 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 135 calls to Random so far
randoop.util.Randomness called by nextRandomInt: 136 calls to Random so far
Array creation heuristic: 1 candidates
number of candidate components: 1
randoop.util.Randomness called by nextRandomInt: 137 calls to Random so far
chosenSeq: java.lang.String[] strArray4 = new java.lang.String[] { "", "", "", "" };

randoop.util.Randomness called by weightedCoinFlip: 138 calls to Random so far
Will query component set for objects of type boolean
getSequencesForType(boolean, false, false)
candidate compatibleType (isNonreceiverType=true): boolean
  Adding 2 methods.
getSequencesForType(boolean) => 2 sequences.
number of candidate components: 2
randoop.util.Randomness called by nextRandomInt: 139 calls to Random so far
chosenSeq: boolean boolean0 = false;

Successfully created new unique sequence:
org.apache.commons.cli.BasicParser basicParser0 = new org.apache.commons.cli.BasicParser();
org.apache.commons.cli.Options options1 = null;
java.lang.String[] strArray6 = new java.lang.String[] { "", "", "", "" };
java.lang.String[] strArray8 = (java.lang.String[]) flatten_Options_StringArray_boolean.invoke(basicParser0, options1, strArray6, false);

MethodCall.execute: this = protected java.lang.String[] org.apache.commons.cli.BasicParser.flatten(org.apache.commons.cli.Options,java.lang.String[],boolean)
  Param 0 = null
  Param 1 = [ [class java.lang.String],  [class java.lang.String],  [class java.lang.String],  [class java.lang.String]] [class [Ljava.lang.String;]
  Param 2 = false [class java.lang.Boolean]
runReflectionCodeRaw: protected java.lang.String[] org.apache.commons.cli.BasicParser.flatten(org.apache.commons.cli.Options,java.lang.String[],boolean)
runReflectionCodeRaw(protected java.lang.String[] org.apache.commons.cli.BasicParser.flatten(org.apache.commons.cli.Options,java.lang.String[],boolean)) =>  failed to run
isSideEffectFree => false for Statement [ org.apache.commons.cli.BasicParser.<init> : () -> org.apache.commons.cli.BasicParser]
Making index 0 active.
Making index 1 inactive (value is null)
isSideEffectFree => false for Statement [  : () -> java.lang.String]
Making index 2 inactive (value is a primitive)
isSideEffectFree => false for Statement [  : () -> java.lang.String]
Making index 3 inactive (value is a primitive)
isSideEffectFree => false for Statement [  : () -> java.lang.String]
Making index 4 inactive (value is a primitive)
isSideEffectFree => false for Statement [  : () -> java.lang.String]
Making index 5 inactive (value is a primitive)
isSideEffectFree => false for Statement [ java.lang.String[4] : (java.lang.String, java.lang.String, java.lang.String, java.lang.String) -> java.lang.String[]]
Making index 6 active.
isSideEffectFree => false for Statement [ false : () -> boolean]
Making index 7 inactive (value is a primitive)
isSideEffectFree => false for Statement [ org.apache.commons.cli.BasicParser.flatten : (org.apache.commons.cli.BasicParser, org.apache.commons.cli.Options, java.lang.String[], boolean) -> java.lang.String[]]
Making index 8 active.
Adding sequence #1 of type java.lang.String[] of length 9
Adding sequence #2 of type org.apache.commons.cli.BasicParser of length 9
Adding sequence #2 of type java.lang.String[] of length 9
RunCommand.run():
  cd C:\Users\varun\AppData\Local\Temp\checkRegressionTest005619987484386884233; java -ea -Xmx3000m -XX:+HeapDumpOnOutOfMemoryError -classpath .;C:\Users\varun\IdeaProjects\randoop\commons-cli-1.2-src\commons-cli-1.2-src\target\classes;C:\Users\varun\IdeaProjects\randoop\build\libs\randoop-all-4.3.2.jar org.junit.runner.JUnitCore RegressionTest0
  timeoutMillis=1200000, environment: {USERDOMAIN_ROAMINGPROFILE=DESKTOP-ERILEPT, LOCALAPPDATA=C:\Users\varun\AppData\Local, PROCESSOR_LEVEL=6, ChocolateyLastPathUpdate=132882075918329529, USERDOMAIN=DESKTOP-ERILEPT, LOGONSERVER=\\DESKTOP-ERILEPT, JAVA_HOME=C:\Program Files\Eclipse Adoptium\jdk-17.0.5.8-hotspot\, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Users\varun\OneDrive\Documents\WindowsPowerShell\Modules;C:\Program Files\WindowsPowerShell\Modules;C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, OneDrive=C:\Users\varun\OneDrive, APPDATA=C:\Users\varun\AppData\Roaming, USERNAME=varun, ChocolateyInstall=C:\ProgramData\chocolatey, ProgramFiles(x86)=C:\Program Files (x86), Path=C:\Program Files\Eclipse Adoptium\jdk-17.0.5.8-hotspot\bin;C:\Python310\Scripts\;C:\Python310\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\varun\AppData\Local\Microsoft\WindowsApps;C:\src\flutter\bin;C:\Users\varun\AppData\Local\Microsoft\WindowsApps;C:\Users\varun\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\varun\AppData\Roaming\npm, CommonProgramFiles=C:\Program Files\Common Files, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL, OS=Windows_NT, DriverData=C:\Windows\System32\Drivers\DriverData, OneDriveConsumer=C:\Users\varun\OneDrive, COMPUTERNAME=DESKTOP-ERILEPT, PROCESSOR_REVISION=7e05, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\WINDOWS\system32\cmd.exe, TERMINAL_EMULATOR=JetBrains-JediTerm, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, TEMP=C:\Users\varun\AppData\Local\Temp, HOMEPATH=\Users\varun, SystemRoot=C:\WINDOWS, TERM_SESSION_ID=9af5c8f9-4ae2-4376-9d78-fda2d589a215, USERPROFILE=C:\Users\varun, HOMEDRIVE=C:, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 126 Stepping 5, GenuineIntel, TMP=C:\Users\varun\AppData\Local\Temp, PUBLIC=C:\Users\Public, ProgramFiles=C:\Program Files, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=8, windir=C:\WINDOWS, IDEA_INITIAL_DIRECTORY=C:\Program Files\JetBrains\IntelliJ IDEA 2023.1\bin, =::=::\}
RunCommand.run():
  cd C:\Users\varun\AppData\Local\Temp\checkRegressionTest0113365439612685753611; java -ea -Xmx3000m -XX:+HeapDumpOnOutOfMemoryError -classpath .;C:\Users\varun\IdeaProjects\randoop\commons-cli-1.2-src\commons-cli-1.2-src\target\classes;C:\Users\varun\IdeaProjects\randoop\build\libs\randoop-all-4.3.2.jar org.junit.runner.JUnitCore RegressionTest0
  timeoutMillis=1200000, environment: {USERDOMAIN_ROAMINGPROFILE=DESKTOP-ERILEPT, LOCALAPPDATA=C:\Users\varun\AppData\Local, PROCESSOR_LEVEL=6, ChocolateyLastPathUpdate=132882075918329529, USERDOMAIN=DESKTOP-ERILEPT, LOGONSERVER=\\DESKTOP-ERILEPT, JAVA_HOME=C:\Program Files\Eclipse Adoptium\jdk-17.0.5.8-hotspot\, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Users\varun\OneDrive\Documents\WindowsPowerShell\Modules;C:\Program Files\WindowsPowerShell\Modules;C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, OneDrive=C:\Users\varun\OneDrive, APPDATA=C:\Users\varun\AppData\Roaming, USERNAME=varun, ChocolateyInstall=C:\ProgramData\chocolatey, ProgramFiles(x86)=C:\Program Files (x86), Path=C:\Program Files\Eclipse Adoptium\jdk-17.0.5.8-hotspot\bin;C:\Python310\Scripts\;C:\Python310\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\varun\AppData\Local\Microsoft\WindowsApps;C:\src\flutter\bin;C:\Users\varun\AppData\Local\Microsoft\WindowsApps;C:\Users\varun\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\varun\AppData\Roaming\npm, CommonProgramFiles=C:\Program Files\Common Files, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL, OS=Windows_NT, DriverData=C:\Windows\System32\Drivers\DriverData, OneDriveConsumer=C:\Users\varun\OneDrive, COMPUTERNAME=DESKTOP-ERILEPT, PROCESSOR_REVISION=7e05, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\WINDOWS\system32\cmd.exe, TERMINAL_EMULATOR=JetBrains-JediTerm, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, TEMP=C:\Users\varun\AppData\Local\Temp, HOMEPATH=\Users\varun, SystemRoot=C:\WINDOWS, TERM_SESSION_ID=9af5c8f9-4ae2-4376-9d78-fda2d589a215, USERPROFILE=C:\Users\varun, HOMEDRIVE=C:, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 126 Stepping 5, GenuineIntel, TMP=C:\Users\varun\AppData\Local\Temp, PUBLIC=C:\Users\Public, ProgramFiles=C:\Program Files, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=8, windir=C:\WINDOWS, IDEA_INITIAL_DIRECTORY=C:\Program Files\JetBrains\IntelliJ IDEA 2023.1\bin, =::=::\}
RunCommand.run():
  cd C:\Users\varun\AppData\Local\Temp\checkRegressionTest0210609905548122564973; java -ea -Xmx3000m -XX:+HeapDumpOnOutOfMemoryError -classpath .;C:\Users\varun\IdeaProjects\randoop\commons-cli-1.2-src\commons-cli-1.2-src\target\classes;C:\Users\varun\IdeaProjects\randoop\build\libs\randoop-all-4.3.2.jar org.junit.runner.JUnitCore RegressionTest0
  timeoutMillis=1200000, environment: {USERDOMAIN_ROAMINGPROFILE=DESKTOP-ERILEPT, LOCALAPPDATA=C:\Users\varun\AppData\Local, PROCESSOR_LEVEL=6, ChocolateyLastPathUpdate=132882075918329529, USERDOMAIN=DESKTOP-ERILEPT, LOGONSERVER=\\DESKTOP-ERILEPT, JAVA_HOME=C:\Program Files\Eclipse Adoptium\jdk-17.0.5.8-hotspot\, SESSIONNAME=Console, ALLUSERSPROFILE=C:\ProgramData, PROCESSOR_ARCHITECTURE=AMD64, PSModulePath=C:\Users\varun\OneDrive\Documents\WindowsPowerShell\Modules;C:\Program Files\WindowsPowerShell\Modules;C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules, SystemDrive=C:, OneDrive=C:\Users\varun\OneDrive, APPDATA=C:\Users\varun\AppData\Roaming, USERNAME=varun, ChocolateyInstall=C:\ProgramData\chocolatey, ProgramFiles(x86)=C:\Program Files (x86), Path=C:\Program Files\Eclipse Adoptium\jdk-17.0.5.8-hotspot\bin;C:\Python310\Scripts\;C:\Python310\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;C:\Program Files\Git\cmd;C:\Program Files\nodejs\;C:\Users\varun\AppData\Local\Microsoft\WindowsApps;C:\src\flutter\bin;C:\Users\varun\AppData\Local\Microsoft\WindowsApps;C:\Users\varun\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\varun\AppData\Roaming\npm, CommonProgramFiles=C:\Program Files\Common Files, PATHEXT=.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC;.PY;.PYW;.CPL, OS=Windows_NT, DriverData=C:\Windows\System32\Drivers\DriverData, OneDriveConsumer=C:\Users\varun\OneDrive, COMPUTERNAME=DESKTOP-ERILEPT, PROCESSOR_REVISION=7e05, CommonProgramW6432=C:\Program Files\Common Files, ComSpec=C:\WINDOWS\system32\cmd.exe, TERMINAL_EMULATOR=JetBrains-JediTerm, ProgramData=C:\ProgramData, ProgramW6432=C:\Program Files, TEMP=C:\Users\varun\AppData\Local\Temp, HOMEPATH=\Users\varun, SystemRoot=C:\WINDOWS, TERM_SESSION_ID=9af5c8f9-4ae2-4376-9d78-fda2d589a215, USERPROFILE=C:\Users\varun, HOMEDRIVE=C:, PROCESSOR_IDENTIFIER=Intel64 Family 6 Model 126 Stepping 5, GenuineIntel, TMP=C:\Users\varun\AppData\Local\Temp, PUBLIC=C:\Users\Public, ProgramFiles=C:\Program Files, CommonProgramFiles(x86)=C:\Program Files (x86)\Common Files, NUMBER_OF_PROCESSORS=8, windir=C:\WINDOWS, IDEA_INITIAL_DIRECTORY=C:\Program Files\JetBrains\IntelliJ IDEA 2023.1\bin, =::=::\}
