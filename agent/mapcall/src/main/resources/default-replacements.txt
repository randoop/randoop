// Default replacement file
//
// Notes:
// 1. This replacement file only uses package replacement.  It requires that all desired
//    replacements exist in the replacement (e.g., second) package, and that there is a
//    corresponding method in the original package.
// 2. Experiments showed that creating a blanket null/zero-replacement of methods/constructors for
//    the AWT/Swing classes breaks the behavior so drastically that methods under test are affected,
//    and creates uninteresting or failing tests b/c of use of null or zero values.

// Apply default mock for System.exit that throws randoop.SystemExitCalledError.
java.lang randoop.mock.java.lang

// Apply mocks for AWT/Swing to (attempt to) avoid the following:
// - having dialogs (and other components/containers) display themselves,
// - having windowing system focus taken,
// - getting headless exceptions in headless environment,
// - having windowing system threads run a long time and cause a timeout
//   which makes generation very slow.
// These replacements are "good enough", but don't acheive all of these goals in all environments:
// - Display of windows/dialogs is suppressed, but, at least on macOS, focus can be taken.
// - The headless exception can still occur in a headless environment, and it is necessary to use a
//   virtual windowing system (such as xvfb in the X11 distribution).
// - AWT/Swing threads are still started that have to be stopped. This can result in platform-
//   dependent exceptions, and delay while waiting for Randoop to apply the timeout.
//   The solution for this may be to Prevent AWT/Swing components from starting threads.
//   Threads are managed by an AppContext in java.awt.Component. So, we want to replace the call to
//   sun.awt.AppContext.getAppContext() in the constructor of java.awt.Component to create an AppContext
//   object that mocks the class in a reasonable way.
//
// Note: some of these changes require modifying bootloaded classes, meaning the mocks need to be
//       on the bootclasspath, and the agent needs to allow them to be changed.

java.awt randoop.mock.java.awt
javax.swing randoop.mock.javax.swing
