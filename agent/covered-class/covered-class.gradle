// this is a Java project

plugins {
  id 'java'
  id 'jacoco'
}

description = 'covered-class instrumentation agent'

configurations {
  javassist
  implementation.extendsFrom javassist
}

dependencies {
  javassist 'org.javassist:javassist:3.+'
  implementation project(path: ':', configuration: 'shadow')
  implementation project(path: ':')
}

javadoc {
   options.addStringOption('Xwerror', '-Xdoclint:all,-missing')
}

jar {
  manifest {
    attributes(
      'Premain-Class': 'randoop.instrument.CoveredClassAgent',
      'Can-Redefine-Classes': 'true'
      )
  }
}

shadowJar {
  // Name the jar file covered-class-version.jar
  archiveClassifier = null

  exclude '**/pom*'

  relocate 'com.github.javaparser', 'coveredclass.org.github.javaparser'
  relocate 'com.google.common', 'coveredclass.com.google.common'
  relocate 'com.google.gson', 'coveredclass.com.google.gson'
  relocate 'com.google.thirdparty', 'coveredclass.com.google.thirdparty'
  relocate 'com.jcraft.jsch', 'coveredclass.com.jcraft.jsch'
  relocate 'com.sun.javadoc', 'coveredclass.com.sun.javadoc'
  relocate 'com.sun.jna', 'coveredclass.com.sun.jna'
  relocate 'com.trilead.ssh2', 'coveredclass.com.trilead.ssh2'
  relocate 'de.regnis.q.sequence', 'coveredclass.de.regnis.q.sequence'
  relocate 'javassist', 'coveredclass.javassist'
  relocate 'net.fortuna.ical4j', 'coveredclass.net.fortuna.ical4j'
  relocate 'nu.xom', 'coveredclass.nu.xom'
  relocate 'org.antlr', 'coveredclass.org.antlr'
  relocate 'org.apache', 'coveredclass.org.apache'
  relocate 'org.ccil.cowan.tagsoup', 'coveredclass.org.ccil.cowan.tagsoup'
  relocate 'org.checkerframework', 'coveredclass.org.checkerframework'
  relocate 'org.ini4j', 'coveredclass.org.ini4j'
  relocate 'org.slf4j', 'coveredclass.org.slf4j'
  relocate 'org.tigris.subversion', 'coveredclass.org.tigris.subversion'
  relocate 'org.tmatesoft', 'coveredclass.org.tmatesoft'
}

apply from: rootProject.file('gradle-mvn-push.gradle')

final coveredClassPom(publication) {
    // Don't use publication.from components.java which would publish the skinny jar as randoop.jar.
    // Information that is in all pom files is configured in randoop/gradle-mvn-push.gradle.
    publication.pom {
        name = 'Randoop\'s covered-class agent'
        description = 'Requires Randoop\'s tests to execute (cover) certain classes'
    }
}

publishing {
    publications {
        remote(MavenPublication) {
            coveredClassPom it
            artifact shadowJar
            artifact javadocJar
            artifact sourcesJar
        }

        local(MavenPublication) {
            coveredClassPom it
            artifact shadowJar
            artifact javadocJar
            artifact sourcesJar
        }
    }
}
